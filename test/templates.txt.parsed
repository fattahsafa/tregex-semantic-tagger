(ROOT
  (S
    (NP (PRP They))
    (VP (VBP need)
      (NP (NNS tents)))
    (. .)))

nsubj(need-2, They-1)
root(ROOT-0, need-2)
dobj(need-2, tents-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD allowed)
      (NP (DT the) (NN attack)))
    (. .)))

nsubj(allowed-2, They-1)
root(ROOT-0, allowed-2)
det(attack-4, the-3)
dobj(allowed-2, attack-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD allowed)
      (S
        (NP (PRP them))
        (NP (DT those) (NNS luxuries))))
    (. .)))

nsubj(allowed-2, They-1)
root(ROOT-0, allowed-2)
nsubj(luxuries-5, them-3)
det(luxuries-5, those-4)
xcomp(allowed-2, luxuries-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD authorized)
      (NP (NNS tents)))
    (. .)))

nsubj(authorized-2, They-1)
root(ROOT-0, authorized-2)
dobj(authorized-2, tents-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD authorized)
      (S
        (NP (PRP them))
        (VP (TO to)
          (VP (VB leave)))))
    (. .)))

nsubj(authorized-2, They-1)
root(ROOT-0, authorized-2)
nsubj(leave-5, them-3)
aux(leave-5, to-4)
xcomp(authorized-2, leave-5)

(ROOT
  (S
    (NP (DT The) (NNS attacks))
    (VP (VBD were)
      (VP (VBN aborted)))
    (. .)))

det(attacks-2, The-1)
nsubjpass(aborted-4, attacks-2)
auxpass(aborted-4, were-3)
root(ROOT-0, aborted-4)

(ROOT
  (S
    (NP (DT The) (NNS attacks))
    (VP (VBD were)
      (VP (VBN allowed)))
    (. .)))

det(attacks-2, The-1)
nsubjpass(allowed-4, attacks-2)
auxpass(allowed-4, were-3)
root(ROOT-0, allowed-4)

(ROOT
  (S
    (NP (DT The) (NNS attackers))
    (VP (VBD were)
      (VP (VBN allowed)
        (S
          (VP (TO to)
            (VP (VB leave))))))
    (. .)))

det(attackers-2, The-1)
nsubjpass(allowed-4, attackers-2)
xsubj(leave-6, attackers-2)
auxpass(allowed-4, were-3)
root(ROOT-0, allowed-4)
aux(leave-6, to-5)
xcomp(allowed-4, leave-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD made)
      (SBAR
        (S
          (NP (PRP him))
          (VP (VBP eat)))))
    (. .)))

nsubj(made-2, They-1)
root(ROOT-0, made-2)
nsubj(eat-4, him-3)
ccomp(made-2, eat-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN made)
        (S
          (VP (TO to)
            (VP (VB eat))))))
    (. .)))

nsubjpass(made-3, He-1)
xsubj(eat-5, He-1)
auxpass(made-3, was-2)
root(ROOT-0, made-3)
aux(eat-5, to-4)
xcomp(made-3, eat-5)

(ROOT
  (S
    (NP (DT The) (NN plan))
    (VP (VBD fizzled))
    (. .)))

det(plan-2, The-1)
nsubj(fizzled-3, plan-2)
root(ROOT-0, fizzled-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD failed)
      (PP (IN in)
        (NP (PRP$ their) (NNS efforts))))
    (. .)))

nsubj(failed-2, They-1)
root(ROOT-0, failed-2)
poss(efforts-5, their-4)
prep_in(failed-2, efforts-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD failed)
      (PP (IN in)
        (S
          (VP (VBG helping)
            (NP (DT the) (NNS refugees))))))
    (. .)))

nsubj(failed-2, They-1)
root(ROOT-0, failed-2)
prepc_in(failed-2, helping-4)
det(refugees-6, the-5)
dobj(helping-4, refugees-6)

(ROOT
  (S
    (NP (DT The) (NN plan))
    (VP (VBD failed))
    (. .)))

det(plan-2, The-1)
nsubj(failed-3, plan-2)
root(ROOT-0, failed-3)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD failed)
      (PP (IN in)
        (S
          (VP (VBG providing)
            (NP (NN aid))))))
    (. .)))

nsubj(failed-2, They-1)
root(ROOT-0, failed-2)
prepc_in(failed-2, providing-4)
dobj(providing-4, aid-5)

(ROOT
  (S
    (NP (DT The) (NN effort))
    (VP (VBD was)
      (ADJP (JJ unsuccessful)))
    (. .)))

det(effort-2, The-1)
nsubj(unsuccessful-4, effort-2)
cop(unsuccessful-4, was-3)
root(ROOT-0, unsuccessful-4)

(ROOT
  (S
    (NP (DT The) (NN government))
    (VP (VBD was)
      (ADJP (JJ unsuccessful)
        (PP (IN in)
          (NP (DT the) (NN effort)))))
    (. .)))

det(government-2, The-1)
nsubj(unsuccessful-4, government-2)
cop(unsuccessful-4, was-3)
root(ROOT-0, unsuccessful-4)
det(effort-7, the-6)
prep_in(unsuccessful-4, effort-7)

(ROOT
  (S
    (NP (DT The) (NN effort))
    (VP (VBD was)
      (ADJP (JJ unsuccessful)
        (PP (IN in)
          (SBAR (IN that)
            (S
              (NP (PRP it))
              (VP (VBD was)
                (ADJP (JJ stupid)
                  (PP (IN from)
                    (NP (DT the) (NN start))))))))))
    (. .)))

det(effort-2, The-1)
nsubj(unsuccessful-4, effort-2)
cop(unsuccessful-4, was-3)
root(ROOT-0, unsuccessful-4)
complm(stupid-9, that-6)
nsubj(stupid-9, it-7)
cop(stupid-9, was-8)
prepc_in(unsuccessful-4, stupid-9)
det(start-12, the-11)
prep_from(stupid-9, start-12)

(ROOT
  (S
    (NP (DT The) (VBN required) (NNS plans))
    (VP (VBD were) (RB not)
      (ADJP (JJ available)))
    (. .)))

det(plans-3, The-1)
amod(plans-3, required-2)
nsubj(available-6, plans-3)
cop(available-6, were-4)
neg(available-6, not-5)
root(ROOT-0, available-6)

(ROOT
  (S
    (NP (NNP The))
    (VP (VBD required)
      (SBAR
        (S
          (NP (PRP it))
          (VP (VBD was) (RB not)
            (ADJP (JJ available))))))
    (. .)))

nsubj(required-2, The-1)
root(ROOT-0, required-2)
nsubj(available-6, it-3)
cop(available-6, was-4)
neg(available-6, not-5)
ccomp(required-2, available-6)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD tried)
      (NP
        (NP (NN everything) (JJ short))
        (PP (IN of)
          (NP (JJ terrorist) (NNS attacks)))))
    (. .)))

nsubj(tried-2, They-1)
root(ROOT-0, tried-2)
dobj(tried-2, everything-3)
amod(everything-3, short-4)
amod(attacks-7, terrorist-6)
prep_of(everything-3, attacks-7)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD fell)
      (NP
        (NP (JJ short))
        (PP (IN of)
          (NP (VBG attacking)))))
    (. .)))

nsubj(fell-2, They-1)
root(ROOT-0, fell-2)
dobj(fell-2, short-3)
prep_of(short-3, attacking-5)

(ROOT
  (S
    (NP (PRP I))
    (VP (VBD was) (RB not)
      (ADJP (JJ able)
        (S
          (VP (TO to)
            (VP (VB go))))))
    (. .)))

nsubj(able-4, I-1)
cop(able-4, was-2)
neg(able-4, not-3)
root(ROOT-0, able-4)
aux(go-6, to-5)
xcomp(able-4, go-6)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD might)
      (VP (VB go)))
    (. .)))

nsubj(go-3, He-1)
aux(go-3, might-2)
root(ROOT-0, go-3)

(ROOT
  (S
    (NP
      (NP (DT The) (NN need))
      (PP (IN for)
        (NP (NNS tents))))
    (VP (VBD was)
      (ADJP (JJ great)))
    (. .)))

det(need-2, The-1)
nsubj(great-6, need-2)
prep_for(need-2, tents-4)
cop(great-6, was-5)
root(ROOT-0, great-6)

(ROOT
  (S
    (NP (DT The) (NN need)
      (S
        (VP (TO to)
          (VP (VB provide)
            (NP (NNS tents))))))
    (VP (VBD was)
      (ADJP (JJ great)))
    (. .)))

det(need-2, The-1)
nsubj(great-7, need-2)
aux(provide-4, to-3)
infmod(need-2, provide-4)
dobj(provide-4, tents-5)
cop(great-7, was-6)
root(ROOT-0, great-7)

(ROOT
  (S
    (NP (DT The) (NN energy) (NN requirement))
    (VP (VBD was)
      (NP (NN immense)))
    (. .)))

det(requirement-3, The-1)
nn(requirement-3, energy-2)
nsubj(immense-5, requirement-3)
cop(immense-5, was-4)
root(ROOT-0, immense-5)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBP require)
      (SBAR (IN that)
        (S
          (NP (PRP they))
          (VP (VBP go)))))
    (. .)))

nsubj(require-2, We-1)
root(ROOT-0, require-2)
complm(go-5, that-3)
nsubj(go-5, they-4)
ccomp(require-2, go-5)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wished)
      (S
        (NP (PRP him))
        (ADJP (JJ dead))))
    (. .)))

nsubj(wished-2, They-1)
root(ROOT-0, wished-2)
nsubj(dead-4, him-3)
xcomp(wished-2, dead-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD wished)
      (NP (PRP him))
      (ADVP (RB away)))
    (. .)))

nsubj(wished-2, They-1)
root(ROOT-0, wished-2)
dobj(wished-2, him-3)
advmod(wished-2, away-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD made)
      (S
        (NP (PRP him))
        (ADJP (JJ aware))))
    (. .)))

nsubj(made-2, They-1)
root(ROOT-0, made-2)
nsubj(aware-4, him-3)
xcomp(made-2, aware-4)

(ROOT
  (S
    (NP (PRP He))
    (VP (VBD was)
      (VP (VBN made)
        (S
          (ADJP (JJ aware)))))
    (. .)))

nsubjpass(made-3, He-1)
auxpass(made-3, was-2)
root(ROOT-0, made-3)
acomp(made-3, aware-4)

(ROOT
  (S
    (NP (PRP They))
    (VP (VBD appeared)
      (ADJP (JJ unwilling)))
    (. .)))

nsubj(unwilling-3, They-1)
cop(unwilling-3, appeared-2)
root(ROOT-0, unwilling-3)

(ROOT
  (S
    (NP (PRP He))
    (VP (MD must)
      (VP (VB go)))
    (. .)))

nsubj(go-3, He-1)
aux(go-3, must-2)
root(ROOT-0, go-3)

