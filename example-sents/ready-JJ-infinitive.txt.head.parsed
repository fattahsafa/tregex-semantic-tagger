(ROOT
  (S
    (NP (NNP Musharraf))
    (VP
      (VP (VBD was) (RB not)
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB give)
                (PRT (RP up))
                (NP (PRP$ his) (JJ military) (NN post)))))))
      (, ,)
      (CC but)
      (VP
        (ADVP (RB also))
        (VBD wanted)
        (S
          (VP (TO to)
            (VP (VB be)
              (NP (DT a) (JJ civilian) (NN president)))))))
    (. .)))

nsubj(ready-4, Musharraf-1)
nsubj(wanted-14, Musharraf-1)
xsubj(president-19, Musharraf-1)
cop(ready-4, was-2)
neg(ready-4, not-3)
root(ROOT-0, ready-4)
aux(give-6, to-5)
xcomp(ready-4, give-6)
prt(give-6, up-7)
poss(post-10, his-8)
amod(post-10, military-9)
dobj(give-6, post-10)
advmod(wanted-14, also-13)
conj_but(ready-4, wanted-14)
aux(president-19, to-15)
cop(president-19, be-16)
det(president-19, a-17)
amod(president-19, civilian-18)
xcomp(wanted-14, president-19)

(ROOT
  (S
    (ADVP (RB Already))
    (, ,)
    (PP (IN in)
      (NP
        (NP
          (NP (NNP Gilani) (POS 's))
          (NN hometown))
        (PP (IN of)
          (NP (NNP Multan)))))
    (, ,)
    (NP (NNS rioters))
    (VP (VBD attacked)
      (NP (NN government) (NNS offices)
        (CC and)
        (NNS banks))
      (S
        (VP (TO to)
          (VP (VB protest)
            (NP (NN electricity) (NNS disruptions))))))
    (. .)))

advmod(attacked-11, Already-1)
poss(hometown-6, Gilani-4)
prep_in(attacked-11, hometown-6)
prep_of(hometown-6, Multan-8)
nsubj(attacked-11, rioters-10)
root(ROOT-0, attacked-11)
nn(offices-13, government-12)
dobj(attacked-11, offices-13)
dobj(attacked-11, banks-15)
conj_and(offices-13, banks-15)
aux(protest-17, to-16)
xcomp(attacked-11, protest-17)
nn(disruptions-19, electricity-18)
dobj(protest-17, disruptions-19)

(ROOT
  (S
    (NP
      (NP (DT This) (NN window))
      (PP (IN of)
        (NP (NN opportunity))))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN expanded)
          (PP (IN through)
            (NP (NN dialogue)
              (CC and)
              (NN reconciliation)))
          (PP (IN with)
            (NP
              (NP (DT those))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBP are)
                    (ADJP (JJ ready)
                      (S
                        (VP (TO to)
                          (VP (VB disavow)
                            (NP (NN extremism)
                              (CC and)
                              (NN militancy))))))))))))))
    (. .)))

det(window-2, This-1)
nsubjpass(expanded-7, window-2)
prep_of(window-2, opportunity-4)
aux(expanded-7, can-5)
auxpass(expanded-7, be-6)
root(ROOT-0, expanded-7)
prep_through(expanded-7, dialogue-9)
prep_through(expanded-7, reconciliation-11)
conj_and(dialogue-9, reconciliation-11)
prep_with(expanded-7, those-13)
nsubj(ready-16, those-13)
cop(ready-16, are-15)
rcmod(those-13, ready-16)
aux(disavow-18, to-17)
xcomp(ready-16, disavow-18)
dobj(disavow-18, extremism-19)
dobj(disavow-18, militancy-21)
conj_and(extremism-19, militancy-21)

(ROOT
  (S
    (NP (DT This) (NN time))
    (, ,)
    (SBAR (IN as)
      (S
        (NP (DT the) (NNP Afghan) (NNP Taliban))
        (VP (VBP are)
          (VP (VBN expelled)
            (PP (IN from)
              (NP (NNP Pakistan)))))))
    (, ,)
    (NP (NNP NATO)
      (CC and)
      (NNP Afghan) (NNS forces))
    (VP (MD must)
      (VP (VB be)
        (ADJP (JJ ready)
          (S
            (VP (TO to)
              (VP (VB take)
                (NP (PRP them))
                (PRT (RP on))))))))
    (. .)))

det(time-2, This-1)
nsubj(ready-19, time-2)
mark(expelled-9, as-4)
det(Taliban-7, the-5)
nn(Taliban-7, Afghan-6)
nsubjpass(expelled-9, Taliban-7)
auxpass(expelled-9, are-8)
advcl(ready-19, expelled-9)
prep_from(expelled-9, Pakistan-11)
nn(forces-16, NATO-13)
conj_and(NATO-13, Afghan-15)
nn(forces-16, Afghan-15)
nsubj(ready-19, forces-16)
aux(ready-19, must-17)
cop(ready-19, be-18)
root(ROOT-0, ready-19)
aux(take-21, to-20)
xcomp(ready-19, take-21)
dobj(take-21, them-22)
prt(take-21, on-23)

(ROOT
  (S
    (NP (NNP Assad))
    (VP (VBD compared)
      (NP
        (NP
          (NP (DT the) (NNS situations))
          (PP (IN in)
            (NP (NNP Lebanon)
              (CC and)
              (NNP Iraq)))
          (, ,)
          (VP (VBG insisting)
            (SBAR (IN that)
              (S
                (NP (NNP Iraq))
                (VP (MD could)
                  (VP (VB achieve)
                    (SBAR
                      (WHNP (WP what))
                      (S
                        (NP (NNP Lebanon))
                        (VP (VBD had)
                          (ADVP (RB already))
                          (VP (VBN accomplished)
                            (NP (CD two) (NNS decades) (RB before))))))))))))
        (, ,) (RB namely)
        (NP (DT the) (VBN forced) (NN withdrawal)))
      (PP (IN by)
        (NP (JJ American)
          (CC and)
          (JJ British) (NNS troops)))
      (PP (IN in)
        (NP
          (NP (DT the) (NN face))
          (PP (IN of)
            (NP (JJ steadfast) (, ,) (JJ bloody) (NN resistance))))))
    (. .)))

nsubj(compared-2, Assad-1)
root(ROOT-0, compared-2)
det(situations-4, the-3)
dobj(compared-2, situations-4)
prep_in(situations-4, Lebanon-6)
prep_in(situations-4, Iraq-8)
conj_and(Lebanon-6, Iraq-8)
partmod(situations-4, insisting-10)
complm(achieve-14, that-11)
nsubj(achieve-14, Iraq-12)
aux(achieve-14, could-13)
ccomp(insisting-10, achieve-14)
dobj(accomplished-19, what-15)
nsubj(accomplished-19, Lebanon-16)
aux(accomplished-19, had-17)
advmod(accomplished-19, already-18)
ccomp(achieve-14, accomplished-19)
num(decades-21, two-20)
dobj(accomplished-19, decades-21)
advmod(decades-21, before-22)
advmod(situations-4, namely-24)
det(withdrawal-27, the-25)
amod(withdrawal-27, forced-26)
dep(situations-4, withdrawal-27)
amod(troops-32, American-29)
conj_and(American-29, British-31)
amod(troops-32, British-31)
prep_by(compared-2, troops-32)
det(face-35, the-34)
prep_in(compared-2, face-35)
amod(resistance-40, steadfast-37)
amod(resistance-40, bloody-39)
prep_of(face-35, resistance-40)

(ROOT
  (S
    (S
      (NP (PRP$ His) (NN family))
      (VP (VBZ is)
        (ADJP (JJ poor))))
    (, ,)
    (CC and)
    (S
      (NP (PRP$ his) (NNS parents))
      (VP (VBP have)
        (ADVP (RB already))
        (VP (VBN sold)
          (NP
            (QP (RB almost) (DT all))
            (PRP$ their) (NN furniture))
          (S
            (VP (TO to)
              (VP (VB pay)
                (PP (IN for)
                  (NP (NN food)
                    (CC and)
                    (NN schooling)))
                (PP (IN for)
                  (NP (PRP$ their) (NNS children)))))))))
    (. .)))

poss(family-2, His-1)
nsubj(poor-4, family-2)
cop(poor-4, is-3)
root(ROOT-0, poor-4)
poss(parents-8, his-7)
nsubj(sold-11, parents-8)
aux(sold-11, have-9)
advmod(sold-11, already-10)
conj_and(poor-4, sold-11)
quantmod(all-13, almost-12)
num(furniture-15, all-13)
poss(furniture-15, their-14)
dobj(sold-11, furniture-15)
aux(pay-17, to-16)
xcomp(sold-11, pay-17)
prep_for(pay-17, food-19)
prep_for(pay-17, schooling-21)
conj_and(food-19, schooling-21)
poss(children-24, their-23)
prep_for(pay-17, children-24)

(ROOT
  (S
    (NP (NNP Bank) (NNS regulators))
    (VP (MD should)
      (ADVP (RB just))
      (VP (VB say)
        (ADVP (RB no)
          (PP (TO to)
            (NP (JJ such) (NN lending))))
        (PP (IN by)
          (NP
            (NP (NNS institutions))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP are)
                  (ADVP (RB already))
                  (PP (IN under)
                    (NP (PRP$ their) (NN purview))))))))))
    (. .)))

nn(regulators-2, Bank-1)
nsubj(say-5, regulators-2)
aux(say-5, should-3)
advmod(say-5, just-4)
root(ROOT-0, say-5)
advmod(say-5, no-6)
amod(lending-9, such-8)
prep_to(no-6, lending-9)
prep_by(say-5, institutions-11)
nsubj(are-13, institutions-11)
rcmod(institutions-11, are-13)
advmod(are-13, already-14)
poss(purview-17, their-16)
prep_under(are-13, purview-17)

(ROOT
  (SBARQ
    (WHPP (TO To)
      (WHNP (WP what)
        (NP (NN degree))))
    (SQ (VBP are)
      (NP
        (NP (NNP Fatah))
        (, ,)
        (NP (DT the) (NN secular) (NN movement)))
      (VP (VBN controlled)
        (PP (IN by)
          (NP
            (NP (NNP Palestine) (NNP President) (NNP Abbas))
            (, ,)
            (CC and)
            (NP
              (NP (DT the) (JJ Islamist) (NN Hamas))
              (ADJP (JJ ready)
                (S
                  (VP (TO to)
                    (VP (VB reach)
                      (NP (DT an) (NN understanding))
                      (PP (IN about)
                        (SBAR
                          (WHADVP (WRB how))
                          (S
                            (VP (TO to)
                              (VP (VB proceed)
                                (PP (IN after)
                                  (NP (DT the) (NN disengagement)))))))))))))))))
    (. ?)))

prep_to(controlled-10, what-2)
dep(what-2, degree-3)
auxpass(controlled-10, are-4)
nsubjpass(controlled-10, Fatah-5)
det(movement-9, the-7)
nn(movement-9, secular-8)
appos(Fatah-5, movement-9)
root(ROOT-0, controlled-10)
nn(Abbas-14, Palestine-12)
nn(Abbas-14, President-13)
agent(controlled-10, Abbas-14)
det(Hamas-19, the-17)
amod(Hamas-19, Islamist-18)
agent(controlled-10, Hamas-19)
conj_and(Abbas-14, Hamas-19)
amod(Hamas-19, ready-20)
aux(reach-22, to-21)
xcomp(ready-20, reach-22)
det(understanding-24, an-23)
dobj(reach-22, understanding-24)
advmod(proceed-28, how-26)
aux(proceed-28, to-27)
prepc_about(reach-22, proceed-28)
det(disengagement-31, the-30)
prep_after(proceed-28, disengagement-31)

(ROOT
  (S
    (NP (DT These))
    (VP (VBP are) (RB not)
      (NP
        (NP (NNS problems))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB await)
                (NP (NN resolution))))))))
    (. .)))

nsubj(problems-4, These-1)
cop(problems-4, are-2)
neg(problems-4, not-3)
root(ROOT-0, problems-4)
nsubj(await-7, problems-4)
aux(await-7, can-6)
rcmod(problems-4, await-7)
dobj(await-7, resolution-8)

(ROOT
  (S
    (NP (NN Someone))
    (VP (MD must)
      (VP (VB decide)
        (ADVP
          (ADVP (RB soon))
          (PRN (, ,)
            (PP (IN for)
              (NP (NN example)))
            (, ,)))
        (PP (IN about)
          (NP
            (NP (DT the) (NN division))
            (PP (IN of)
              (NP
                (NP (DT the) (NN land))
                (CC and)
                (NP (DT the) (NNS apartments))))))
        (S
          (VP (TO to)
            (VP (VB be)
              (VP (VBN built)
                (PP (IN in)
                  (SBAR
                    (WHNP (WP what))
                    (S
                      (VP (VBZ is)
                        (ADVP (RB already))
                        (VP (VBN known)
                          (SBAR (IN as)
                            (S
                              (NP (`` ``)
                                (NP (NNP Khalifa) (NNP bin) (NNP Zaid) (NNP City))
                                (, ,) ('' ''))
                              (VP (VBN located)
                                (PP (IN on)
                                  (NP
                                    (NP (DT a) (JJ former) (JJ Israeli) (NN settlement))
                                    (PP (IN in)
                                      (NP (DT the) (NNP Gaza) (NNP Strip)))))))))))))))))))
    (. .)))

nsubj(decide-3, Someone-1)
xsubj(built-20, Someone-1)
aux(decide-3, must-2)
root(ROOT-0, decide-3)
advmod(decide-3, soon-4)
dep(soon-4, for-6)
pobj(for-6, example-7)
det(division-11, the-10)
prep_about(decide-3, division-11)
det(land-14, the-13)
prep_of(division-11, land-14)
det(apartments-17, the-16)
prep_of(division-11, apartments-17)
conj_and(land-14, apartments-17)
aux(built-20, to-18)
auxpass(built-20, be-19)
xcomp(decide-3, built-20)
nsubjpass(known-25, what-22)
auxpass(known-25, is-23)
advmod(known-25, already-24)
prepc_in(built-20, known-25)
mark(located-34, as-26)
nn(City-31, Khalifa-28)
nn(City-31, bin-29)
nn(City-31, Zaid-30)
nsubj(located-34, City-31)
advcl(known-25, located-34)
det(settlement-39, a-36)
amod(settlement-39, former-37)
amod(settlement-39, Israeli-38)
prep_on(located-34, settlement-39)
det(Strip-43, the-41)
nn(Strip-43, Gaza-42)
prep_in(settlement-39, Strip-43)

(ROOT
  (S
    (PP (IN With)
      (NP
        (NP (DT the) (NNP Gaza) (NNP Strip))
        (PP (IN in)
          (NP (PRP$ its) (NN backyard)))))
    (, ,)
    (NP (NNP Egypt))
    (VP
      (VP (VBZ has)
        (ADVP (RB already))
        (VP (VBN mediated)
          (NP
            (NP (JJ several) (NNS times))
            (PP (IN between)
              (NP (NNP Hamas)
                (CC and)
                (NNP Fatah))))))
      (, ,)
      (CC and)
      (VP (VBZ has)
        (VP (VBN been)
          (VP (VBG trying) (, ,)
            (PRN
              (ADVP (RB so) (RB far))
              (ADVP (RB unsuccessfully))))))
      (, ,)
      (S
        (VP (TO to)
          (VP (VB arrange)
            (NP
              (NP (DT a) (NN swap))
              (PP (IN of)
                (NP (NNS prisoners))))
            (PP (IN with)
              (NP
                (NP (NNP Israel))
                (PP (VBG following)
                  (NP
                    (NP
                      (NP (NNP Hamas) (POS 's))
                      (NN abduction))
                    (PP (IN of)
                      (NP (JJ Israeli) (NN soldier) (NNP Gilad) (NNP Shalit)))))))))))
    (. .)))

det(Strip-4, the-2)
nn(Strip-4, Gaza-3)
prep_with(mediated-12, Strip-4)
poss(backyard-7, its-6)
prep_in(Strip-4, backyard-7)
nsubj(mediated-12, Egypt-9)
nsubj(trying-23, Egypt-9)
nsubj(arrange-30, Egypt-9)
xsubj(arrange-30, Egypt-9)
aux(mediated-12, has-10)
advmod(mediated-12, already-11)
root(ROOT-0, mediated-12)
amod(times-14, several-13)
dobj(mediated-12, times-14)
prep_between(times-14, Hamas-16)
prep_between(times-14, Fatah-18)
conj_and(Hamas-16, Fatah-18)
aux(trying-23, has-21)
aux(trying-23, been-22)
conj_and(mediated-12, trying-23)
advmod(far-26, so-25)
dep(trying-23, far-26)
dep(far-26, unsuccessfully-27)
aux(arrange-30, to-29)
conj_and(mediated-12, arrange-30)
xcomp(mediated-12, arrange-30)
det(swap-32, a-31)
dobj(arrange-30, swap-32)
prep_of(swap-32, prisoners-34)
prep_with(arrange-30, Israel-36)
poss(abduction-40, Hamas-38)
prep_following(Israel-36, abduction-40)
amod(Shalit-45, Israeli-42)
nn(Shalit-45, soldier-43)
nn(Shalit-45, Gilad-44)
prep_of(abduction-40, Shalit-45)

