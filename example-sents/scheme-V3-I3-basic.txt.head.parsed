(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS employees))
        (VP (VBP feel)
          (ADVP (RBR more))
          (PP (IN like)
            (NP
              (NP (NNS insiders))
              (PRN (: --)
                (NP
                  (NP (DT a) (JJ key) (NN purpose))
                  (PP (IN of)
                    (NP (JJ military) (NNS rituals))))
                (: --)))))))
    (NP (EX there))
    (VP (VBZ is)
      (NP
        (NP (JJ little) (NN need))
        (PP (IN for)
          (NP
            (NP (NN incentive) (NN pay))
            (CC or)
            (NP (JJ pay-for-performance) (NNS schemes))))))
    (. .)))

mark(feel-3, If-1)
nsubj(feel-3, employees-2)
advcl(is-16, feel-3)
advmod(feel-3, more-4)
prep_like(feel-3, insiders-6)
det(purpose-10, a-8)
amod(purpose-10, key-9)
dep(insiders-6, purpose-10)
amod(rituals-13, military-12)
prep_of(purpose-10, rituals-13)
expl(is-16, there-15)
root(ROOT-0, is-16)
amod(need-18, little-17)
nsubj(is-16, need-18)
nn(pay-21, incentive-20)
prep_for(need-18, pay-21)
amod(schemes-24, pay-for-performance-23)
prep_for(need-18, schemes-24)
conj_or(pay-21, schemes-24)

(ROOT
  (S
    (NP (NNP EU) (NNP Commission) (NNP President) (NNP Romano) (NNP Prodi))
    (VP (VBZ has)
      (VP (VBN proposed)
        (NP (DT a) (NN scheme)
          (S
            (VP (TO to)
              (VP (VB strengthen)
                (NP
                  (NP (DT the) (NNP Union) (POS 's))
                  (NN executive))))))))
    (. .)))

nn(Prodi-5, EU-1)
nn(Prodi-5, Commission-2)
nn(Prodi-5, President-3)
nn(Prodi-5, Romano-4)
nsubj(proposed-7, Prodi-5)
aux(proposed-7, has-6)
root(ROOT-0, proposed-7)
det(scheme-9, a-8)
dobj(proposed-7, scheme-9)
aux(strengthen-11, to-10)
infmod(scheme-9, strengthen-11)
det(Union-13, the-12)
poss(executive-15, Union-13)
dobj(strengthen-11, executive-15)

(ROOT
  (S (CC But)
    (S
      (NP
        (NP (DT the) (NNS charges))
        (PP (IN against)
          (NP (NNP Khodorkovsky))))
      (VP (VBP are)
        (ADJP (RB as) (JJ flimsy)
          (SBAR (IN as)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (ADJP (JJ tendentious))))))))
    (: :)
    (S
      (S
        (NP (DT the) (NN privatization) (NN case))
        (VP (VBD had)
          (VP (VBN been)
            (ADVP (RB amicably))
            (VP (VBN settled)
              (ADVP (RB previously))))))
      (, ,)
      (CC and)
      (S
        (NP (NNP Khodorkovsky))
        (VP (VBZ has)
          (ADVP (RB merely))
          (VP (VBN used)
            (NP
              (NP (NN tax) (NN avoidance) (NNS schemes))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (VBP are)
                    (ADJP (JJ commonplace)
                      (PP (IN in)
                        (NP (NNP Russia))))))))))))
    (: --)
    (CC and)
    (S
      (NP (DT that))
      (VP (VBP have)
        (VP (VBN been)
          (VP (VBN upheld)
            (PP (IN in)
              (NP (NN court)))))))
    (. .)))

det(charges-3, the-2)
nsubj(flimsy-8, charges-3)
prep_against(charges-3, Khodorkovsky-5)
cop(flimsy-8, are-6)
advmod(flimsy-8, as-7)
root(ROOT-0, flimsy-8)
mark(tendentious-12, as-9)
nsubj(tendentious-12, they-10)
cop(tendentious-12, are-11)
ccomp(flimsy-8, tendentious-12)
det(case-16, the-14)
nn(case-16, privatization-15)
nsubjpass(settled-20, case-16)
aux(settled-20, had-17)
auxpass(settled-20, been-18)
advmod(settled-20, amicably-19)
conj_but(flimsy-8, settled-20)
parataxis(flimsy-8, settled-20)
advmod(settled-20, previously-21)
nsubj(used-27, Khodorkovsky-24)
aux(used-27, has-25)
advmod(used-27, merely-26)
conj_but(flimsy-8, used-27)
parataxis(flimsy-8, used-27)
conj_and(settled-20, used-27)
nn(schemes-30, tax-28)
nn(schemes-30, avoidance-29)
dobj(used-27, schemes-30)
nsubj(commonplace-33, schemes-30)
cop(commonplace-33, are-32)
rcmod(schemes-30, commonplace-33)
prep_in(commonplace-33, Russia-35)
nsubjpass(upheld-41, that-38)
aux(upheld-41, have-39)
auxpass(upheld-41, been-40)
conj_and(flimsy-8, upheld-41)
prep_in(upheld-41, court-43)

(ROOT
  (S
    (ADVP (IN So) (RB far))
    (, ,)
    (NP (NNP Norway))
    (VP (VBZ has)
      (VP (VBN avoided)
        (NP
          (NP (DT the) (JJS worst) (NNS pitfalls))
          (PP (IN of)
            (NP (DT the) (JJ Dutch) (NN disease))))
        (PP (IN by)
          (S
            (VP (VBG using)
              (NP (PRP$ its) (JJ massive) (NN oil) (NNS revenues))
              (S
                (VP (TO to)
                  (VP (VB establish)
                    (NP
                      (NP (DT a) (JJ national) (NNS savings) (NN scheme))
                      (, ,)
                      (NP (DT the) (NNP Petroleum) (NNP Fund))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (VP (VBN permitted)
                              (S
                                (VP (TO to)
                                  (VP (VB invest)
                                    (ADVP (RB only))
                                    (PP (IN in)
                                      (NP (JJ foreign) (NNS assets)))))))))))))))))))
    (. .)))

advmod(avoided-6, So-1)
advmod(So-1, far-2)
nsubj(avoided-6, Norway-4)
aux(avoided-6, has-5)
root(ROOT-0, avoided-6)
det(pitfalls-9, the-7)
amod(pitfalls-9, worst-8)
dobj(avoided-6, pitfalls-9)
det(disease-13, the-11)
amod(disease-13, Dutch-12)
prep_of(pitfalls-9, disease-13)
prepc_by(avoided-6, using-15)
poss(revenues-19, its-16)
amod(revenues-19, massive-17)
nn(revenues-19, oil-18)
dobj(using-15, revenues-19)
aux(establish-21, to-20)
xcomp(using-15, establish-21)
det(scheme-25, a-22)
amod(scheme-25, national-23)
nn(scheme-25, savings-24)
dobj(establish-21, scheme-25)
det(Fund-29, the-27)
nn(Fund-29, Petroleum-28)
appos(scheme-25, Fund-29)
nsubjpass(permitted-33, Fund-29)
auxpass(permitted-33, is-32)
rcmod(scheme-25, permitted-33)
rcmod(Fund-29, permitted-33)
aux(invest-35, to-34)
xcomp(permitted-33, invest-35)
advmod(invest-35, only-36)
amod(assets-39, foreign-38)
prep_in(invest-35, assets-39)

(ROOT
  (S
    (NP (DT The) (JJ only) (NN way)
      (S
        (VP (TO to)
          (VP (VB extricate)
            (NP (NNP Syria))
            (PP (IN from)
              (NP (DT the) (JJ fatal) (JJ Iranian) (NN embrace)))))))
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB draw)
            (NP (PRP it))
            (PP (IN into)
              (NP
                (NP (DT a) (JJ regional) (NN scheme))
                (PP (IN for)
                  (NP (NN peace)))))))))
    (. .)))

det(way-3, The-1)
amod(way-3, only-2)
nsubj(is-12, way-3)
xsubj(draw-14, way-3)
aux(extricate-5, to-4)
infmod(way-3, extricate-5)
dobj(extricate-5, Syria-6)
det(embrace-11, the-8)
amod(embrace-11, fatal-9)
amod(embrace-11, Iranian-10)
prep_from(extricate-5, embrace-11)
root(ROOT-0, is-12)
aux(draw-14, to-13)
xcomp(is-12, draw-14)
dobj(draw-14, it-15)
det(scheme-19, a-17)
amod(scheme-19, regional-18)
prep_into(draw-14, scheme-19)
prep_for(scheme-19, peace-21)

(ROOT
  (S
    (NP
      (NP (NNP America) (POS 's))
      (NN drive)
      (S
        (VP (TO to)
          (VP (VB force)
            (S
              (NP (NNP Iran))
              (VP (TO to)
                (VP (VB stop)
                  (NP (PRP$ its) (JJ nuclear) (NN program))
                  (PP (IN through)
                    (NP (DT an) (JJ ineffective) (NNS sanctions) (NN regime))))))))))
    (VP (VBZ has)
      (VP (VBN been)
        (ADJP
          (ADJP (DT no) (RBR more) (JJ successful))
          (PP (IN than)
            (NP
              (NP (DT any))
              (PP (IN of)
                (NP (PRP$ its) (JJ other) (NNS schemes))))))
        (S
          (VP (TO to)
            (VP (VB isolate)
              (NP
                (NP (DT the) (NN region) (POS 's))
                (NNS extremists)))))))
    (. .)))

poss(drive-3, America-1)
nsubj(successful-21, drive-3)
xsubj(isolate-29, drive-3)
aux(force-5, to-4)
infmod(drive-3, force-5)
nsubj(stop-8, Iran-6)
aux(stop-8, to-7)
xcomp(force-5, stop-8)
poss(program-11, its-9)
amod(program-11, nuclear-10)
dobj(stop-8, program-11)
det(regime-16, an-13)
amod(regime-16, ineffective-14)
nn(regime-16, sanctions-15)
prep_through(stop-8, regime-16)
aux(successful-21, has-17)
cop(successful-21, been-18)
dep(successful-21, no-19)
advmod(successful-21, more-20)
root(ROOT-0, successful-21)
prep_than(successful-21, any-23)
poss(schemes-27, its-25)
amod(schemes-27, other-26)
prep_of(any-23, schemes-27)
aux(isolate-29, to-28)
xcomp(successful-21, isolate-29)
det(region-31, the-30)
poss(extremists-33, region-31)
dobj(isolate-29, extremists-33)

(ROOT
  (S
    (S (CC But)
      (NP
        (NP (DT the) (NN security))
        (SBAR (IN that)
          (S
            (NP (DT this) (NN scheme))
            (VP (VBD was)
              (VP (VBN supposed)
                (S
                  (VP (TO to)
                    (VP (VB produce)))))))))
      (VP (MD could)
        (ADVP (RB never))
        (ADVP (RB really))
        (VP (VB be)
          (VP (VBN achieved)))))
    (: ;)
    (S
      (NP
        (NP (DT the) (NN centrality))
        (PP (IN of)
          (NP (DT the) (JJ Arab-Israeli) (NN conflict))))
      (VP (MD could) (RB not)
        (VP (VB be)
          (VP (VBN attenuated)))))
    (. .)))

cc(achieved-15, But-1)
det(security-3, the-2)
nsubjpass(achieved-15, security-3)
complm(supposed-8, that-4)
det(scheme-6, this-5)
nsubjpass(supposed-8, scheme-6)
xsubj(produce-10, scheme-6)
auxpass(supposed-8, was-7)
dep(security-3, supposed-8)
aux(produce-10, to-9)
xcomp(supposed-8, produce-10)
aux(achieved-15, could-11)
neg(achieved-15, never-12)
advmod(achieved-15, really-13)
auxpass(achieved-15, be-14)
root(ROOT-0, achieved-15)
det(centrality-18, the-17)
nsubjpass(attenuated-26, centrality-18)
det(conflict-22, the-20)
amod(conflict-22, Arab-Israeli-21)
prep_of(centrality-18, conflict-22)
aux(attenuated-26, could-23)
neg(attenuated-26, not-24)
auxpass(attenuated-26, be-25)
parataxis(achieved-15, attenuated-26)

(ROOT
  (S
    (NP
      (NP (NNS Jordanians))
      (PP (IN of)
        (NP
          (NP
            (NP (DT the) (NN caliber))
            (PP (IN of)
              (NP
                (NP (NNP Former) (NNP Prime) (NNP Ministers) (NNP Abdelsalam) (NNP Al-Majali))
                (CC and)
                (NP (NNP Taher) (NNP al-Masri)))))
          (, ,)
          (CONJP (RB as) (RB well) (IN as))
          (NP
            (NP (DT a) (JJ former) (NN adviser))
            (PP (IN of)
              (NP
                (NP (NNP King) (NNP Hussein))
                (, ,)
                (NP (NNP Adnan) (NNP Abu-Odeh))
                (, ,)))))))
    (VP (VBP have)
      (VP (VBN been)
        (VP (VBG advancing)
          (NP
            (NP (NNS schemes))
            (PP (IN for)
              (NP (DT a) (JJ Jordanian-Palestinian) (NN solution)))))))
    (. .)))

nsubj(advancing-30, Jordanians-1)
det(caliber-4, the-3)
prep_of(Jordanians-1, caliber-4)
nn(Al-Majali-10, Former-6)
nn(Al-Majali-10, Prime-7)
nn(Al-Majali-10, Ministers-8)
nn(Al-Majali-10, Abdelsalam-9)
prep_of(caliber-4, Al-Majali-10)
nn(al-Masri-13, Taher-12)
prep_of(caliber-4, al-Masri-13)
conj_and(Al-Majali-10, al-Masri-13)
det(adviser-20, a-18)
amod(adviser-20, former-19)
prep_of(Jordanians-1, adviser-20)
conj_and(caliber-4, adviser-20)
nn(Hussein-23, King-22)
prep_of(adviser-20, Hussein-23)
nn(Abu-Odeh-26, Adnan-25)
appos(Hussein-23, Abu-Odeh-26)
aux(advancing-30, have-28)
aux(advancing-30, been-29)
root(ROOT-0, advancing-30)
dobj(advancing-30, schemes-31)
det(solution-35, a-33)
amod(solution-35, Jordanian-Palestinian-34)
prep_for(schemes-31, solution-35)

(ROOT
  (S
    (VP (VB Take)
      (NP
        (NP
          (NP (NN pension) (NN reform))
          (, ,)
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ aims)
                (S
                  (VP (TO to)
                    (VP
                      (VP (VB reduce)
                        (NP
                          (NP (DT the) (NN scope))
                          (PP (IN of)
                            (NP (JJ state-run) (, ,) (JJ pay-as-you-go) (NNS systems)))))
                      (CC and)
                      (VP (VB expand)
                        (ADJP (JJ private))))))))))
        (, ,)
        (NP
          (ADJP (RB fully) (VBN funded))
          (NNS schemes))))
    (. .)))

root(ROOT-0, Take-1)
nn(reform-3, pension-2)
dobj(Take-1, reform-3)
nsubj(aims-6, reform-3)
rcmod(reform-3, aims-6)
aux(reduce-8, to-7)
xcomp(aims-6, reduce-8)
det(scope-10, the-9)
dobj(reduce-8, scope-10)
amod(systems-15, state-run-12)
amod(systems-15, pay-as-you-go-14)
prep_of(scope-10, systems-15)
xcomp(aims-6, expand-17)
conj_and(reduce-8, expand-17)
acomp(expand-17, private-18)
advmod(funded-21, fully-20)
amod(schemes-22, funded-21)
appos(reform-3, schemes-22)

(ROOT
  (S
    (S
      (NP (DT The) (NN result))
      (VP (VBZ is)
        (NP
          (NP (DT a) (JJ temporary) (NN increase))
          (PP (IN in)
            (NP (NN budget) (NNS deficits))))))
    (: ;)
    (S
      (NP (DT the) (JJ fiscal) (NNS benefits))
      (VP (VBP appear)
        (ADVP (RB only))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (JJ private) (NNS schemes))
            (VP (VBP start)
              (S
                (VP (VBG taking)
                  (PRT (RP over))
                  (NP (NN pension) (NNS liabilities))
                  (PP (IN from)
                    (NP (DT the) (JJ state-run) (NNS systems))))))))))
    (. .)))

det(result-2, The-1)
nsubj(increase-6, result-2)
cop(increase-6, is-3)
det(increase-6, a-4)
amod(increase-6, temporary-5)
root(ROOT-0, increase-6)
nn(deficits-9, budget-8)
prep_in(increase-6, deficits-9)
det(benefits-13, the-11)
amod(benefits-13, fiscal-12)
nsubj(appear-14, benefits-13)
parataxis(increase-6, appear-14)
advmod(appear-14, only-15)
advmod(start-19, when-16)
amod(schemes-18, private-17)
nsubj(start-19, schemes-18)
advcl(appear-14, start-19)
xcomp(start-19, taking-20)
prt(taking-20, over-21)
nn(liabilities-23, pension-22)
dobj(taking-20, liabilities-23)
det(systems-27, the-25)
amod(systems-27, state-run-26)
prep_from(taking-20, systems-27)

