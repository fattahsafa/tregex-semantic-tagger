Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN In)
      (NP (NNP Mumbai)))
    (, ,)
    (NP
      (NP (DT a) (JJ large) (NN proportion))
      (PP (IN of)
        (NP (PRP them))))
    (VP (VBP are)
      (NP
        (NP (NNPS Muslims))
        (SBAR
          (WHNP (WP who))
          (S
            (VP
              (VP (VBD were)
                (VP (VBN denied)
                  (NP
                    (NP (NN space))
                    (PP (IN in)
                      (NP (DT the) (JJ formal) (NN economy))))))
              (CC and)
              (VP (VBP have)
                (VP (VBN developed)
                  (NP
                    (NP (JJ strong) (JJ vested) (NNS interests))
                    (PP (IN over)
                      (NP (DT the) (JJ past) (CD 50) (NNS years)))))))))))
    (. .)))

prep_in(Muslims-10, Mumbai-2)
det(proportion-6, a-4)
amod(proportion-6, large-5)
nsubj(Muslims-10, proportion-6)
prep_of(proportion-6, them-8)
cop(Muslims-10, are-9)
root(ROOT-0, Muslims-10)
nsubjpass(denied-13, Muslims-10)
nsubjpass(developed-21, Muslims-10)
auxpass(denied-13, were-12)
rcmod(Muslims-10, denied-13)
dobj(denied-13, space-14)
det(economy-18, the-16)
amod(economy-18, formal-17)
prep_in(space-14, economy-18)
aux(developed-21, have-20)
rcmod(Muslims-10, developed-21)
conj_and(denied-13, developed-21)
amod(interests-24, strong-22)
amod(interests-24, vested-23)
dobj(developed-21, interests-24)
det(years-29, the-26)
amod(years-29, past-27)
num(years-29, 50-28)
prep_over(interests-24, years-29)

(ROOT
  (S
    (NP (PRP It))
    (VP (MD will)
      (ADVP (RB now))
      (VP (VB be)
        (ADVP (RB up)
          (PP (TO to)
            (NP (DT the) (NNP UN) (NNP General) (NNP Assembly))))
        (S
          (VP (TO to)
            (VP (VB provide)
              (NP
                (NP (JJ final) (NN approval))
                (PP (IN of)
                  (NP (DT the) (NNP Protocol)))))))))
    (. .)))

nsubj(be-4, It-1)
aux(be-4, will-2)
advmod(be-4, now-3)
root(ROOT-0, be-4)
advmod(be-4, up-5)
det(Assembly-10, the-7)
nn(Assembly-10, UN-8)
nn(Assembly-10, General-9)
prep_to(up-5, Assembly-10)
aux(provide-12, to-11)
xcomp(be-4, provide-12)
amod(approval-14, final-13)
dobj(provide-12, approval-14)
det(Protocol-17, the-16)
prep_of(approval-14, Protocol-17)

(ROOT
  (S
    (SBAR (IN If)
      (S
        (VP (VBD adopted))))
    (, ,)
    (NP (DT this) (NN instrument))
    (VP
      (VP (MD can)
        (VP (VB make)
          (NP (DT a) (JJ real) (NN difference))
          (PP (IN in)
            (NP
              (NP (DT the) (NNS lives))
              (PP (IN of)
                (NP
                  (NP (DT those))
                  (SBAR
                    (WHNP (WP who))
                    (S
                      (VP (VBP are)
                        (ADVP (RB often))
                        (VP (VBN left)
                          (S
                            (VP (TO to)
                              (VP (VB languish)
                                (PP (IN at)
                                  (NP
                                    (NP (DT the) (NNS margins))
                                    (PP (IN of)
                                      (NP (NN society))))))))))))))))))
      (, ,)
      (CC and)
      (VP (VBP are)
        (VP (VBN denied)
          (NP
            (NP (PRP$ their)
              (ADJP (JJ economic) (, ,) (JJ social))
              (, ,)
              (CC and)
              (JJ cultural) (NNS rights))
            (, ,)
            (PP (JJ such) (IN as)
              (NP (NN access))))
          (PP (TO to)
            (NP
              (NP (JJ adequate) (NN nutrition))
              (, ,)
              (NP (NN health) (NNS services))
              (, ,)
              (NP (NN housing))
              (, ,)
              (CC and)
              (NP (NN education)))))))
    (. .)))

mark(adopted-2, If-1)
advcl(make-7, adopted-2)
det(instrument-5, this-4)
nsubj(make-7, instrument-5)
nsubjpass(denied-30, instrument-5)
aux(make-7, can-6)
root(ROOT-0, make-7)
det(difference-10, a-8)
amod(difference-10, real-9)
dobj(make-7, difference-10)
det(lives-13, the-12)
prep_in(make-7, lives-13)
prep_of(lives-13, those-15)
nsubjpass(left-19, those-15)
auxpass(left-19, are-17)
advmod(left-19, often-18)
rcmod(those-15, left-19)
aux(languish-21, to-20)
xcomp(left-19, languish-21)
det(margins-24, the-23)
prep_at(languish-21, margins-24)
prep_of(margins-24, society-26)
auxpass(denied-30, are-29)
conj_and(make-7, denied-30)
poss(social-34, their-31)
amod(social-34, economic-32)
dobj(denied-30, social-34)
amod(rights-38, cultural-37)
dobj(denied-30, rights-38)
conj_and(social-34, rights-38)
prep_such_as(social-34, access-42)
amod(nutrition-45, adequate-44)
prep_to(denied-30, nutrition-45)
nn(services-48, health-47)
prep_to(denied-30, services-48)
conj_and(nutrition-45, services-48)
prep_to(denied-30, housing-50)
conj_and(nutrition-45, housing-50)
prep_to(denied-30, education-53)
conj_and(nutrition-45, education-53)

(ROOT
  (S
    (NP (DT The)
      (ADJP (RBS most) (JJ obvious))
      (NN risk))
    (VP (VBZ is)
      (SBAR
        (SBAR (IN that)
          (S
            (NP (DT the) (NNS elections))
            (VP (VBP are) (RB not)
              (VP (VBN concluded)))))
        (CC or)
        (SBAR (IN that)
          (S
            (NP (NNP Yushchenko))
            (VP (VBZ is)
              (VP (VBN denied)
                (NP (JJ executive) (NN power))))))))
    (. .)))

det(risk-4, The-1)
advmod(obvious-3, most-2)
amod(risk-4, obvious-3)
nsubj(is-5, risk-4)
root(ROOT-0, is-5)
complm(concluded-11, that-6)
det(elections-8, the-7)
nsubjpass(concluded-11, elections-8)
auxpass(concluded-11, are-9)
neg(concluded-11, not-10)
ccomp(is-5, concluded-11)
complm(denied-16, that-13)
nsubjpass(denied-16, Yushchenko-14)
auxpass(denied-16, is-15)
ccomp(is-5, denied-16)
conj_or(concluded-11, denied-16)
amod(power-18, executive-17)
dobj(denied-16, power-18)

(ROOT
  (S
    (NP (NN Opposition) (NNS candidates)
      (CC and)
      (NNS parties))
    (VP (VBD were)
      (VP (VBN denied)
        (NP
          (NP (NN registration))
          (PP (IN for)
            (NP (DT the) (JJS slightest) (JJ formal) (NN complaint))))))
    (. .)))

nn(candidates-2, Opposition-1)
nsubjpass(denied-6, candidates-2)
conj_and(candidates-2, parties-4)
nsubjpass(denied-6, parties-4)
auxpass(denied-6, were-5)
root(ROOT-0, denied-6)
dobj(denied-6, registration-7)
det(complaint-12, the-9)
amod(complaint-12, slightest-10)
amod(complaint-12, formal-11)
prep_for(registration-7, complaint-12)

(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN conflict))
        (PP (IN in)
          (NP (NNP Northern) (NNP Ireland))))
      (VP (VBD was)
        (ADVP (RB always))
        (ADJP (JJ territorial))))
    (: :) (RB not)
    (S
      (ADVP (RB even))
      (NP (DT the)
        (ADJP (RBS most) (JJ radical))
        (JJ Irish) (JJ Republican) (NN group))
      (VP
        (ADVP (RB ever))
        (VBD denied)
        (NP
          (NP (DT the) (NN legitimacy))
          (PP (IN of)
            (NP
              (NP (NNP Great) (NNP Britain))
              (: --) (RB only)
              (NP
                (NP (PRP$ its) (NN rule))
                (PP (IN over)
                  (NP
                    (NP (DT the) (CD six) (JJ northern) (NNS provinces))
                    (PP (IN of)
                      (SBAR
                        (WHNP (WP what))
                        (S
                          (NP (PRP they))
                          (VP (VBP consider)
                            (NP (NNP United) (NNP Ireland))))))))))))))
    (. .)))

det(conflict-2, The-1)
nsubj(territorial-8, conflict-2)
nn(Ireland-5, Northern-4)
prep_in(conflict-2, Ireland-5)
cop(territorial-8, was-6)
advmod(territorial-8, always-7)
root(ROOT-0, territorial-8)
neg(territorial-8, not-10)
advmod(denied-19, even-11)
det(group-17, the-12)
advmod(radical-14, most-13)
amod(group-17, radical-14)
amod(group-17, Irish-15)
amod(group-17, Republican-16)
nsubj(denied-19, group-17)
advmod(denied-19, ever-18)
ccomp(territorial-8, denied-19)
det(legitimacy-21, the-20)
dobj(denied-19, legitimacy-21)
nn(Britain-24, Great-23)
prep_of(legitimacy-21, Britain-24)
advmod(Britain-24, only-26)
poss(rule-28, its-27)
dep(Britain-24, rule-28)
det(provinces-33, the-30)
num(provinces-33, six-31)
amod(provinces-33, northern-32)
prep_over(rule-28, provinces-33)
dobj(consider-37, what-35)
nsubj(consider-37, they-36)
prepc_of(provinces-33, consider-37)
nn(Ireland-39, United-38)
dobj(consider-37, Ireland-39)

(ROOT
  (S
    (NP
      (NP (DT The) (NN crux))
      (PP (IN of)
        (NP (DT the) (JJ Palestinian-Israeli) (NN conflict)))
      (, ,)
      (PP (IN by)
        (NP (NN contrast)))
      (, ,))
    (ADVP (RB only))
    (ADVP (RB partly))
    (VP (VBZ concerns)
      (NP
        (NP (NNP Israel) (POS 's))
        (NNS borders)))
    (. .)))

det(crux-2, The-1)
nsubj(concerns-13, crux-2)
det(conflict-6, the-4)
amod(conflict-6, Palestinian-Israeli-5)
prep_of(crux-2, conflict-6)
prep_by(crux-2, contrast-9)
advmod(concerns-13, only-11)
advmod(concerns-13, partly-12)
root(ROOT-0, concerns-13)
poss(borders-16, Israel-14)
dobj(concerns-13, borders-16)

(ROOT
  (S
    (SBAR (IN Although)
      (S
        (NP
          (NP (JJ socialist) (JJ economic) (NNS policies))
          (PP (IN in)
            (NP (DT both) (NNS countries))))
        (VP (VBD inhibited)
          (NP (NN initiative)
            (CC and)
            (NN enterprise)))))
    (, ,)
    (NP
      (NP (DT a) (JJ positive) (NN legacy))
      (PP (IN of)
        (NP (DT that) (NN period))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN denied))))
    (. .)))

mark(inhibited-8, Although-1)
amod(policies-4, socialist-2)
amod(policies-4, economic-3)
nsubj(inhibited-8, policies-4)
det(countries-7, both-6)
prep_in(policies-4, countries-7)
advcl(denied-22, inhibited-8)
dobj(inhibited-8, initiative-9)
dobj(inhibited-8, enterprise-11)
conj_and(initiative-9, enterprise-11)
det(legacy-15, a-13)
amod(legacy-15, positive-14)
nsubjpass(denied-22, legacy-15)
det(period-18, that-17)
prep_of(legacy-15, period-18)
aux(denied-22, can-19)
neg(denied-22, not-20)
auxpass(denied-22, be-21)
root(ROOT-0, denied-22)

(ROOT
  (S
    (NP (NNP Nationalism))
    (VP (VBZ degenerates)
      (PP (IN into)
        (NP (JJ violent) (NN narcissism)))
      (SBAR (RB only)
        (WHADVP (WRB when))
        (S
          (VP (VBD denied)
            (NP (PRP$ its) (JJ fundamental) (NNS rights))))))
    (. .)))

nsubj(degenerates-2, Nationalism-1)
root(ROOT-0, degenerates-2)
amod(narcissism-5, violent-4)
prep_into(degenerates-2, narcissism-5)
advmod(denied-8, only-6)
advmod(denied-8, when-7)
ccomp(degenerates-2, denied-8)
poss(rights-11, its-9)
amod(rights-11, fundamental-10)
dobj(denied-8, rights-11)

(ROOT
  (S
    (NP
      (NP (DT The) (JJ devastating) (NNS effects))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ new) (JJ Palestinian) (NN strategy))
          (PP (IN on)
            (NP
              (NP (NNP Israel) (POS 's))
              (JJ international) (NN standing))))))
    (VP (MD can) (RB not)
      (VP (VB be)
        (VP (VBN denied))))
    (. .)))

det(effects-3, The-1)
amod(effects-3, devastating-2)
nsubjpass(denied-17, effects-3)
det(strategy-8, the-5)
amod(strategy-8, new-6)
amod(strategy-8, Palestinian-7)
prep_of(effects-3, strategy-8)
poss(standing-13, Israel-10)
amod(standing-13, international-12)
prep_on(strategy-8, standing-13)
aux(denied-17, can-14)
neg(denied-17, not-15)
auxpass(denied-17, be-16)
root(ROOT-0, denied-17)

(ROOT
  (S
    (PP (IN At)
      (NP (DT the) (JJ same) (NN time)))
    (, ,)
    (NP (NN occupation))
    (VP (VBD denied)
      (NP
        (NP
          (NP (NNP Israel) (POS 's))
          (NN army))
        (NP
          (NP
            (NP (DT the) (NN advantage))
            (PP (IN of)
              (NP (DT a) (NN buffer))))
          (: --)
          (NP
            (NP (DT the) (JJ demilitarized) (NNS zones))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBD were)
                  (NP
                    (NP (DT the) (NN key))
                    (PP (TO to)
                      (NP (DT the) (CD 1967) (NN victory)))
                    (PP (IN against)
                      (NP (DT both) (NNP Egypt)
                        (CC and)
                        (NNP Syria)))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, same-3)
prep_at(denied-7, time-4)
nsubj(denied-7, occupation-6)
root(ROOT-0, denied-7)
poss(army-10, Israel-8)
dobj(denied-7, army-10)
iobj(denied-7, army-10)
det(advantage-12, the-11)
dobj(denied-7, advantage-12)
dep(army-10, advantage-12)
det(buffer-15, a-14)
prep_of(advantage-12, buffer-15)
det(zones-19, the-17)
amod(zones-19, demilitarized-18)
dep(advantage-12, zones-19)
nsubj(key-23, zones-19)
cop(key-23, were-21)
det(key-23, the-22)
rcmod(zones-19, key-23)
det(victory-27, the-25)
num(victory-27, 1967-26)
prep_to(key-23, victory-27)
preconj(Egypt-30, both-29)
prep_against(key-23, Egypt-30)
prep_against(key-23, Syria-32)
conj_and(Egypt-30, Syria-32)

