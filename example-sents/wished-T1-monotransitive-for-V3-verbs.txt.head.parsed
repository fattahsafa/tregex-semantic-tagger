(ROOT
  (S
    (NP (PRP He))
    (VP (VBD wished)
      (S
        (VP (TO to)
          (VP (VB establish)
            (NP
              (NP (DT the) (NN kind))
              (PP (IN of)
                (NP (JJ democratic) (NNS politics)))
              (SBAR
                (WHNP (WDT that))
                (S
                  (VP (MD could)
                    (VP (VB support)
                      (CC and)
                      (VB nurture)
                      (NP (DT a) (JJ healthy) (NN market) (NN economy)))))))))))
    (. .)))

nsubj(wished-2, He-1)
xsubj(establish-4, He-1)
root(ROOT-0, wished-2)
aux(establish-4, to-3)
xcomp(wished-2, establish-4)
det(kind-6, the-5)
dobj(establish-4, kind-6)
nsubj(support-12, kind-6)
nsubj(nurture-14, kind-6)
amod(politics-9, democratic-8)
prep_of(kind-6, politics-9)
aux(support-12, could-11)
rcmod(kind-6, support-12)
rcmod(kind-6, nurture-14)
conj_and(support-12, nurture-14)
det(economy-18, a-15)
amod(economy-18, healthy-16)
nn(economy-18, market-17)
dobj(support-12, economy-18)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (JJ such) (NNS feelings))
        (VP (MD can) (RB not)
          (ADVP (RB simply))
          (VP (VB be)
            (VP (VBN wished)
              (PRT (RP away)))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADJP (JJR better))
      (S
        (VP (TO to)
          (VP (VB allow)
            (PP (IN for)
              (NP (PRP$ their) (NN ritual) (NN expression))))))
      (, ,)
      (SBAR (RB just) (IN as)
        (S
          (NP
            (NP (NNS fears))
            (PP (IN of)
              (NP
                (NP (NN death))
                (, ,)
                (NP (NN violence))
                (, ,)
                (CC and)
                (NP (NN decay)))))
          (VP (VBP find)
            (NP
              (NP (NN expression))
              (PP (IN in)
                (NP (NN religion)
                  (CC or)
                  (NN bull) (NN fighting))))))))
    (. .)))

mark(wished-8, Since-1)
amod(feelings-3, such-2)
nsubjpass(wished-8, feelings-3)
aux(wished-8, can-4)
neg(wished-8, not-5)
advmod(wished-8, simply-6)
auxpass(wished-8, be-7)
advcl(better-13, wished-8)
prt(wished-8, away-9)
nsubj(better-13, it-11)
xsubj(allow-15, it-11)
cop(better-13, is-12)
root(ROOT-0, better-13)
aux(allow-15, to-14)
xcomp(better-13, allow-15)
poss(expression-19, their-17)
nn(expression-19, ritual-18)
prep_for(allow-15, expression-19)
advmod(find-31, just-21)
dep(find-31, as-22)
nsubj(find-31, fears-23)
prep_of(fears-23, death-25)
prep_of(fears-23, violence-27)
conj_and(death-25, violence-27)
prep_of(fears-23, decay-30)
conj_and(death-25, decay-30)
ccomp(better-13, find-31)
dobj(find-31, expression-32)
nn(fighting-37, religion-34)
conj_or(religion-34, bull-36)
nn(fighting-37, bull-36)
prep_in(expression-32, fighting-37)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Children))
        (PP (IN of)
          (NP
            (NP (NNS immigrants))
            (PP (IN in)
              (NP (DT the) (NN past))))))
      (, ,)
      (ADVP (RB however))
      (NP
        (NP (JJ unwelcome))
        (SBAR
          (S
            (NP (PRP they))
            (VP (VBD were)
              (VP (VBN made)
                (S
                  (VP (TO to)
                    (VP (VB feel)))))))))
      (, ,))
    (ADVP (RB rarely))
    (VP (VBD wished)
      (S
        (VP (TO to)
          (VP (VB blow)
            (PRT (RP up))
            (NP
              (NP (DT the) (NNS places))
              (SBAR
                (WHPP (TO to)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP$ their) (NNS parents))
                  (VP (VBD had)
                    (VP (VBN chosen)
                      (S
                        (VP (TO to)
                          (VP (VB move)))))))))))))
    (. .)))

nsubj(wished-17, Children-1)
xsubj(blow-19, Children-1)
prep_of(Children-1, immigrants-3)
det(past-6, the-5)
prep_in(immigrants-3, past-6)
advmod(Children-1, however-8)
dep(Children-1, unwelcome-9)
nsubjpass(made-12, they-10)
xsubj(feel-14, they-10)
auxpass(made-12, were-11)
rcmod(unwelcome-9, made-12)
aux(feel-14, to-13)
xcomp(made-12, feel-14)
advmod(wished-17, rarely-16)
root(ROOT-0, wished-17)
aux(blow-19, to-18)
xcomp(wished-17, blow-19)
prt(blow-19, up-20)
det(places-22, the-21)
dobj(blow-19, places-22)
rel(chosen-28, which-24)
poss(parents-26, their-25)
nsubj(chosen-28, parents-26)
xsubj(move-30, parents-26)
aux(chosen-28, had-27)
rcmod(places-22, chosen-28)
aux(move-30, to-29)
xcomp(chosen-28, move-30)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (NP
      (NP (NNP America) (POS 's))
      (JJ long) (NN boom))
    (VP (VBD was)
      (NP
        (NP (DT no) (NN house))
        (PP (IN of)
          (NP (NNS cards))))
      (, ,)
      (SBAR
        (ADVP (DT no) (NN matter))
        (WHADVP (WRB how) (JJ hard))
        (S
          (NP
            (NP (DT those))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBD scoffed)
                  (PP (IN at)
                    (NP (DT the) (`` ``) (NNP New) (NNP Economy) ('' '')))))))
          (VP (VBD wished)
            (S
              (NP (PRP it))
              (VP (TO to)
                (VP (VB be)
                  (ADVP (RB so)))))))))
    (. .)))

poss(boom-4, America-1)
amod(boom-4, long-3)
nsubj(house-7, boom-4)
cop(house-7, was-5)
det(house-7, no-6)
root(ROOT-0, house-7)
prep_of(house-7, cards-9)
dep(matter-12, no-11)
advmod(wished-24, matter-12)
advmod(hard-14, how-13)
advmod(wished-24, hard-14)
nsubj(scoffed-17, those-15)
nsubj(wished-24, those-15)
rcmod(those-15, scoffed-17)
det(Economy-22, the-19)
nn(Economy-22, New-21)
prep_at(scoffed-17, Economy-22)
dep(house-7, wished-24)
nsubj(be-27, it-25)
aux(be-27, to-26)
xcomp(wished-24, be-27)
advmod(be-27, so-28)

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NN government))
        (PP (IN of)
          (NP
            (NP (DT the) (NNP Federal) (NNP Republic))
            (PP (IN of)
              (NP (NNP Yugoslavia))))))
      (PRN (-LRB- -LRB-)
        (NP (NNP FRY))
        (-RRB- -RRB-)))
    (VP (MD could)
      (VP
        (VP (VB seize))
        (CC and)
        (VP (VB extradite)
          (NP (PRP them))
          (: -)
          (SBAR (IN if)
            (S
              (NP (PRP it))
              (VP (VBD wished)
                (PP (TO to))))))))
    (. .)))

det(government-2, The-1)
nsubj(seize-13, government-2)
nsubj(extradite-15, government-2)
det(Republic-6, the-4)
nn(Republic-6, Federal-5)
prep_of(government-2, Republic-6)
prep_of(Republic-6, Yugoslavia-8)
abbrev(government-2, FRY-10)
aux(seize-13, could-12)
root(ROOT-0, seize-13)
conj_and(seize-13, extradite-15)
dobj(extradite-15, them-16)
mark(wished-20, if-18)
nsubj(wished-20, it-19)
advcl(extradite-15, wished-20)
parataxis(extradite-15, wished-20)
prep(wished-20, to-21)

(ROOT
  (S
    (PP (IN For)
      (NP (DT the) (JJ only) (NN time)))
    (NP (DT that) (JJ long) (NN night))
    (, ,)
    (NP (PRP I))
    (VP (VBD addressed)
      (NP (NNP Karadzic))
      (ADVP (RB directly))
      (, ,)
      (S
        (VP (VBG telling)
          (NP (PRP him))
          (SBAR
            (SBAR (IN that)
              (S
                (NP (PRP we))
                (VP (VBD worked)
                  (ADVP (RB only))
                  (PP (IN for)
                    (NP (NNP President) (NNP Bill) (NNP Clinton))))))
            (CC and)
            (SBAR (IN that)
              (S
                (NP (PRP he))
                (VP (MD could)
                  (VP (VB call)
                    (NP
                      (NP (NNP Carter))
                      (SBAR
                        (SBAR (IN if)
                          (S
                            (NP (PRP he))
                            (VP (VBD wished))))
                        (CC but)
                        (SBAR
                          (SBAR (IN that)
                            (S
                              (NP (PRP we))
                              (VP (MD would)
                                (VP (VB leave)))))
                          (CC and)
                          (SBAR (IN that)
                            (S
                              (NP (DT the) (NN bombing))
                              (VP (MD would)
                                (VP (VB intensify))))))))))))))))
    (. .)))

det(time-4, the-2)
amod(time-4, only-3)
prep_for(addressed-10, time-4)
det(night-7, that-5)
amod(night-7, long-6)
tmod(addressed-10, night-7)
nsubj(addressed-10, I-9)
root(ROOT-0, addressed-10)
dobj(addressed-10, Karadzic-11)
advmod(addressed-10, directly-12)
xcomp(addressed-10, telling-14)
dobj(telling-14, him-15)
complm(worked-18, that-16)
nsubj(worked-18, we-17)
ccomp(telling-14, worked-18)
advmod(worked-18, only-19)
nn(Clinton-23, President-21)
nn(Clinton-23, Bill-22)
prep_for(worked-18, Clinton-23)
complm(call-28, that-25)
nsubj(call-28, he-26)
aux(call-28, could-27)
ccomp(telling-14, call-28)
conj_and(worked-18, call-28)
dobj(call-28, Carter-29)
mark(wished-32, if-30)
nsubj(wished-32, he-31)
dep(Carter-29, wished-32)
dep(leave-37, that-34)
nsubj(leave-37, we-35)
aux(leave-37, would-36)
dep(Carter-29, leave-37)
conj_but(wished-32, leave-37)
dep(intensify-43, that-39)
det(bombing-41, the-40)
nsubj(intensify-43, bombing-41)
aux(intensify-43, would-42)
conj_but(wished-32, intensify-43)
conj_and(leave-37, intensify-43)

(ROOT
  (S
    (NP
      (NP (DT The) (NN world))
      (SBAR
        (WHPP (IN in)
          (WHNP (WDT which)))
        (S
          (NP (PRP we))
          (VP (VBP live)))))
    (VP (MD may)
      (VP (VB be)
        (VP (VBG moving)
          (PP (IN toward)
            (NP
              (NP (DT the) (NN multi-polarity))
              (VP (VBN wished)
                (PP
                  (PP (IN for)
                    (PP (IN by)
                      (NP (NNP French) (NNP President) (NNP Jacques) (NNP Chirac))))
                  (, ,)
                  (CC but)
                  (RB not)
                  (PP
                    (ADVP (RB necessarily))
                    (IN in)
                    (NP (DT a)
                      (ADJP (JJ successful)
                        (CC and)
                        (JJ stable))
                      (NN way))))))))))
    (. .)))

det(world-2, The-1)
nsubj(moving-9, world-2)
rel(live-6, which-4)
nsubj(live-6, we-5)
rcmod(world-2, live-6)
aux(moving-9, may-7)
aux(moving-9, be-8)
root(ROOT-0, moving-9)
det(multi-polarity-12, the-11)
prep_toward(moving-9, multi-polarity-12)
partmod(multi-polarity-12, wished-13)
prep(wished-13, for-14)
pcomp(for-14, by-15)
nn(Chirac-19, French-16)
nn(Chirac-19, President-17)
nn(Chirac-19, Jacques-18)
prep_by(for-14, Chirac-19)
prep(wished-13, not-22)
conj_but(for-14, not-22)
neg(for-14, not-22)
advmod(in-24, necessarily-23)
dep(for-14, in-24)
det(way-29, a-25)
amod(way-29, successful-26)
conj_and(successful-26, stable-28)
amod(way-29, stable-28)
pobj(in-24, way-29)

(ROOT
  (S
    (S
      (NP (DT That))
      (VP (MD can)
        (VP (VB happen)
          (PP (IN with)
            (NP (NN anyone))))))
    (, ,)
    (CC but)
    (S
      (NP (PRP it))
      (VP (VBZ is)
        (ADVP (RB still))
        (NP
          (NP (DT no) (NN reason))
          (PP (IN for)
            (NP
              (NP (NN revolution))
              (, ,)
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADVP (RB always))
                    (VP
                      (ADVP (RBR better))
                      (VBN wished)
                      (PP (IN on)
                        (NP (NN someone) (RB else)))
                      (PP (IN than)
                        (PP (IN on)
                          (NP (PRP yourself)))))))))))))
    (. .)))

nsubj(happen-3, That-1)
aux(happen-3, can-2)
root(ROOT-0, happen-3)
prep_with(happen-3, anyone-5)
nsubj(reason-12, it-8)
cop(reason-12, is-9)
advmod(reason-12, still-10)
det(reason-12, no-11)
conj_but(happen-3, reason-12)
prep_for(reason-12, revolution-14)
nsubjpass(wished-20, revolution-14)
auxpass(wished-20, is-17)
advmod(wished-20, always-18)
advmod(wished-20, better-19)
rcmod(revolution-14, wished-20)
prep_on(wished-20, someone-22)
advmod(someone-22, else-23)
prep(wished-20, than-24)
pcomp(than-24, on-25)
prep_on(than-24, yourself-26)

