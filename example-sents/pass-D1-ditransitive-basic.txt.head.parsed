(ROOT
  (S
    (S
      (NP (NNP Hamas))
      (VP (VBZ does) (RB not)
        (VP (VB share)
          (NP (DT this) (NN view)))))
    (, ,)
    (CC and)
    (S
      (NP (JJ Palestinian) (NN reconciliation) (NNS efforts))
      (VP (VBP have)
        (VP (VBN reached)
          (NP (DT an) (NN impasse)))))
    (. .)))

nsubj(share-4, Hamas-1)
aux(share-4, does-2)
neg(share-4, not-3)
root(ROOT-0, share-4)
det(view-6, this-5)
dobj(share-4, view-6)
amod(efforts-11, Palestinian-9)
nn(efforts-11, reconciliation-10)
nsubj(reached-13, efforts-11)
aux(reached-13, have-12)
conj_and(share-4, reached-13)
det(impasse-15, an-14)
dobj(reached-13, impasse-15)

(ROOT
  (S
    (S (CC But)
      (NP (DT a) (NN plan)
        (S
          (VP (TO to)
            (VP (VB close)
              (NP (JJ numerous) (NNS bases))))))
      (VP (VBD passed)
        (PP (IN by)
          (NP (DT an) (JJ overwhelming) (NN majority)))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ congressional) (NN leadership))
            (ADVP (RB finally))
            (VP (VBD agreed)
              (S
                (VP (TO to)
                  (VP (VB present)
                    (NP
                      (NP (DT a) (JJ single) (NN list))
                      (PP (IN of)
                        (NP (NNS bases))))
                    (S
                      (VP (TO to)
                        (VP (VB be)
                          (VP (VBN closed)))))))))))))
    (: ;)
    (S
      (NP (DT the) (NN list))
      (VP (MD could)
        (ADVP (RB only))
        (VP (VB be)
          (VP (VBN voted)
            (ADVP (RB up)
              (CC or)
              (RB down))
            (, ,)
            (PP (IN without)
              (NP
                (NP (DT any) (NN possibility))
                (PP (IN of)
                  (NP (NNS amendments)))))))))
    (. .)))

cc(passed-8, But-1)
det(plan-3, a-2)
nsubj(passed-8, plan-3)
aux(close-5, to-4)
infmod(plan-3, close-5)
amod(bases-7, numerous-6)
dobj(close-5, bases-7)
root(ROOT-0, passed-8)
det(majority-12, an-10)
amod(majority-12, overwhelming-11)
prep_by(passed-8, majority-12)
advmod(agreed-18, when-13)
det(leadership-16, the-14)
amod(leadership-16, congressional-15)
nsubj(agreed-18, leadership-16)
xsubj(present-20, leadership-16)
advmod(agreed-18, finally-17)
advcl(passed-8, agreed-18)
aux(present-20, to-19)
xcomp(agreed-18, present-20)
det(list-23, a-21)
amod(list-23, single-22)
dobj(present-20, list-23)
prep_of(list-23, bases-25)
aux(closed-28, to-26)
auxpass(closed-28, be-27)
xcomp(present-20, closed-28)
det(list-31, the-30)
nsubjpass(voted-35, list-31)
aux(voted-35, could-32)
advmod(voted-35, only-33)
auxpass(voted-35, be-34)
parataxis(passed-8, voted-35)
advmod(voted-35, up-36)
advmod(voted-35, down-38)
conj_or(up-36, down-38)
det(possibility-42, any-41)
prep_without(voted-35, possibility-42)
prep_of(possibility-42, amendments-44)

(ROOT
  (SBARQ
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (JJ only) (NN factor))
          (SBAR
            (WHNP (WDT that))
            (S
              (VP (VBZ increases)
                (NP
                  (NP (DT a) (NN professor) (POS 's))
                  (NN salary))))))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN passage))
            (PP (IN of)
              (NP (NN time)))))))
    (, ,)
    (WHADVP (WRB why))
    (SQ
      (VP (VB make)
        (NP (DT the) (JJ extra) (NN effort))
        (PP (TO to)
          (NP (NNP excel))))
      (. ?))))

mark(passage-13, If-1)
det(factor-4, the-2)
amod(factor-4, only-3)
nsubj(increases-6, factor-4)
nsubj(passage-13, factor-4)
rcmod(factor-4, increases-6)
det(professor-8, a-7)
poss(salary-10, professor-8)
dobj(increases-6, salary-10)
cop(passage-13, is-11)
det(passage-13, the-12)
advcl(make-18, passage-13)
prep_of(passage-13, time-15)
advmod(make-18, why-17)
root(ROOT-0, make-18)
det(effort-21, the-19)
amod(effort-21, extra-20)
dobj(make-18, effort-21)
prep_to(make-18, excel-23)

(ROOT
  (S
    (PP (IN From)
      (ADJP (NN left)
        (PP (TO to)
          (NP (NN right)))))
    (, ,)
    (NP (JJ many) (JJ European) (NNS intellectuals))
    (VP (VBP think)
      (SBAR (IN that)
        (S
          (NP
            (NP (DT the) (JJ capitalist) (NN game))
            (SBAR (IN as)
              (S
                (VP (VBD played)
                  (PP (IN by)
                    (NP (DT the) (NNP US)))))))
          (VP (VBZ is)
            (NP (NN pass))))))
    (. .)))

prep_from(think-9, left-2)
prep_to(left-2, right-4)
amod(intellectuals-8, many-6)
amod(intellectuals-8, European-7)
nsubj(think-9, intellectuals-8)
root(ROOT-0, think-9)
complm(pass-20, that-10)
det(game-13, the-11)
amod(game-13, capitalist-12)
nsubj(pass-20, game-13)
mark(played-15, as-14)
dep(game-13, played-15)
det(US-18, the-17)
prep_by(played-15, US-18)
cop(pass-20, is-19)
ccomp(think-9, pass-20)

(ROOT
  (S
    (PP (IN As)
      (NP (NN time) (NNS passes)))
    (, ,)
    (NP
      (NP (DT the) (JJ political) (NN support))
      (PP (IN for)
        (NP (NN reform))))
    (VP (VBZ dwindles) (, ,)
      (PP
        (ADVP (IN at) (JJS least))
        (IN until)
        (NP (DT the) (NN system) (NNS blows)))
      (ADVP (RB up)))
    (. .)))

nn(passes-3, time-2)
prep_as(dwindles-10, passes-3)
det(support-7, the-5)
amod(support-7, political-6)
nsubj(dwindles-10, support-7)
prep_for(support-7, reform-9)
root(ROOT-0, dwindles-10)
advmod(dwindles-10, at-12)
pobj(at-12, least-13)
det(blows-17, the-15)
nn(blows-17, system-16)
prep_until(dwindles-10, blows-17)
advmod(dwindles-10, up-18)

(ROOT
  (S
    (S
      (NP (RB Here))
      (VP (VBP are)
        (NP (DT the) (NNS facts))))
    (: :)
    (S
      (NP (NNP Charleroi))
      (VP (VBD was)
        (NP
          (NP (DT a) (JJ small) (JJ dusty) (NN airport))
          (PP (IN with)
            (NP
              (NP
                (QP (JJR less) (IN than) (CD 200,000))
                (NNS passengers))
              (PP (IN per)
                (NP (NN year))))))))
    (. .)))

nsubj(facts-4, Here-1)
cop(facts-4, are-2)
det(facts-4, the-3)
root(ROOT-0, facts-4)
nsubj(airport-11, Charleroi-6)
cop(airport-11, was-7)
det(airport-11, a-8)
amod(airport-11, small-9)
amod(airport-11, dusty-10)
parataxis(facts-4, airport-11)
mwe(than-14, less-13)
quantmod(200,000-15, than-14)
num(passengers-16, 200,000-15)
prep_with(airport-11, passengers-16)
prep_per(passengers-16, year-18)

(ROOT
  (S
    (S
      (NP (DT The) (NN deal))
      (VP (VBD was)
        (VP (VBN signed))))
    (CC and)
    (S
      (NP (RB almost) (NN everybody))
      (VP (VBD was)
        (UCP
          (ADJP (JJ happy))
          (: :)
          (NP
            (NP (NNS passengers))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBP fly)
                  (ADVP (RB cheaply))
                  (: ;)
                  (NP (DT the) (NN airport)))))))
        (, ,)
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NN number))
              (PP (IN of)
                (NP (NNS shops))))
            (VP (VBD increased)
              (PRT (RP along))
              (PP (IN with)
                (NP
                  (NP (DT the) (NN number))
                  (PP (IN of)
                    (NP
                      (NP (NNS passengers))
                      (: ;)
                      (NP
                        (NP (DT the) (JJ local) (NN community))
                        (, ,)
                        (SBAR
                          (WHADVP (WRB where))
                          (S
                            (NP (JJ new) (NNS jobs))
                            (VP (VBD were)
                              (VP (VBN created)))))))))))))))
    (. .)))

det(deal-2, The-1)
nsubjpass(signed-4, deal-2)
auxpass(signed-4, was-3)
root(ROOT-0, signed-4)
advmod(everybody-7, almost-6)
nsubj(happy-9, everybody-7)
cop(happy-9, was-8)
conj_and(signed-4, happy-9)
dep(happy-9, passengers-11)
nsubj(fly-13, passengers-11)
rcmod(passengers-11, fly-13)
advmod(fly-13, cheaply-14)
det(airport-17, the-16)
dobj(fly-13, airport-17)
advmod(increased-24, where-19)
det(number-21, the-20)
nsubj(increased-24, number-21)
prep_of(number-21, shops-23)
advcl(happy-9, increased-24)
det(number-28, the-27)
prep_along_with(increased-24, number-28)
prep_of(number-28, passengers-30)
det(community-34, the-32)
amod(community-34, local-33)
dep(passengers-30, community-34)
advmod(created-40, where-36)
amod(jobs-38, new-37)
nsubjpass(created-40, jobs-38)
auxpass(created-40, were-39)
rcmod(community-34, created-40)

(ROOT
  (S
    (PP (IN In)
      (NP (DT an) (NN interview)))
    (NP (JJ last) (NN summer))
    (, ,)
    (NP (PRP he))
    (VP (VBN depicted)
      (NP
        (NP (DT a) (NN world))
        (SBAR
          (WHPP (IN in)
            (WHNP (WDT which)))
          (S
            (S
              (NP (NNS people))
              (VP (MD would)
                (VP (VB fly)
                  (ADJP (JJ free)))))
            (CC and)
            (S
              (NP (NNS airlines))
              (VP (MD would)
                (VP (VB charge)
                  (NP
                    (NP (NNS airports))
                    (PP (IN in)
                      (NP (NN exchange))))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NNS millions))
                      (PP (IN of)
                        (NP
                          (NP (NNS passengers))
                          (SBAR
                            (S
                              (NP (PRP they))
                              (VP (VBP deliver)
                                (PP (TO to)
                                  (NP (PRP$ their) (NNS shops)))))))))))))))))
    (. .)))

det(interview-3, an-2)
prep_in(depicted-8, interview-3)
amod(summer-5, last-4)
tmod(depicted-8, summer-5)
nsubj(depicted-8, he-7)
root(ROOT-0, depicted-8)
det(world-10, a-9)
dobj(depicted-8, world-10)
rel(fly-15, which-12)
nsubj(fly-15, people-13)
aux(fly-15, would-14)
rcmod(world-10, fly-15)
acomp(fly-15, free-16)
nsubj(charge-20, airlines-18)
aux(charge-20, would-19)
rcmod(world-10, charge-20)
conj_and(fly-15, charge-20)
dobj(charge-20, airports-21)
prep_in(airports-21, exchange-23)
det(millions-26, the-25)
prep_for(charge-20, millions-26)
prep_of(millions-26, passengers-28)
dobj(deliver-30, passengers-28)
nsubj(deliver-30, they-29)
rcmod(passengers-28, deliver-30)
poss(shops-33, their-32)
prep_to(deliver-30, shops-33)

(ROOT
  (S
    (S
      (NP (DT This))
      (VP (VBZ is)
        (NP
          (NP (DT the)
            (ADJP (JJS best) (JJ possible))
            (NN world))
          (PP (IN for)
            (NP (NNS passengers))))
        (, ,)
        (SBAR (IN since)
          (S
            (NP (NN nobody))
            (VP (VBZ forces)
              (NP (NN anyone))
              (S
                (VP (TO to)
                  (VP (VB spend)
                    (NP (NN money))
                    (PP (IN in)
                      (NP (DT an) (NN airport)))))))))))
    (: ;)
    (S
      (NP (NNS people))
      (VP (VBP do)
        (NP (PRP it))
        (SBAR (RB only) (IN because)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (ADJP (JJ convenient)))))))
    (. .)))

nsubj(world-6, This-1)
cop(world-6, is-2)
det(world-6, the-3)
dep(possible-5, best-4)
amod(world-6, possible-5)
root(ROOT-0, world-6)
prep_for(world-6, passengers-8)
mark(forces-12, since-10)
nsubj(forces-12, nobody-11)
advcl(world-6, forces-12)
dobj(forces-12, anyone-13)
aux(spend-15, to-14)
xcomp(forces-12, spend-15)
dobj(spend-15, money-16)
det(airport-19, an-18)
prep_in(spend-15, airport-19)
nsubj(do-22, people-21)
parataxis(world-6, do-22)
dobj(do-22, it-23)
advmod(convenient-28, only-24)
dep(convenient-28, because-25)
nsubj(convenient-28, it-26)
cop(convenient-28, is-27)
dep(do-22, convenient-28)

(ROOT
  (S
    (NP (DT That) (NN condemnation))
    (VP (VBZ matters) (, ,)
      (SBAR (IN because)
        (S
          (S
            (VP (VBG passing)
              (NP (NN judgment))
              (PP (IN on)
                (NP
                  (NP (DT the) (NN trade-off))
                  (PP (IN between)
                    (NP (DT the) (NN efficiency) (NNS gains)))))
              (S
                (VP (TO to)
                  (VP (VB be)
                    (VP (VBN had)
                      (PP (IN from)
                        (NP
                          (NP (DT any) (NN merger))
                          (PP (IN versus)
                            (NP
                              (NP (DT the) (NN threat))
                              (PP (TO to)
                                (NP (NN competition)))))))))))))
          (VP (VBZ is)
            (NP
              (NP (DT a) (JJ subtle) (NN matter))
              (, ,) (RB not)
              (NP (DT an) (JJ ideological) (NN one)))))))
    (. .)))

det(condemnation-2, That-1)
nsubj(matters-3, condemnation-2)
root(ROOT-0, matters-3)
mark(matter-29, because-5)
csubj(matter-29, passing-6)
dobj(passing-6, judgment-7)
det(trade-off-10, the-9)
prep_on(passing-6, trade-off-10)
det(gains-14, the-12)
nn(gains-14, efficiency-13)
prep_between(trade-off-10, gains-14)
aux(had-17, to-15)
auxpass(had-17, be-16)
xcomp(passing-6, had-17)
det(merger-20, any-19)
prep_from(had-17, merger-20)
det(threat-23, the-22)
prep_versus(merger-20, threat-23)
prep_to(threat-23, competition-25)
cop(matter-29, is-26)
det(matter-29, a-27)
amod(matter-29, subtle-28)
advcl(matters-3, matter-29)
neg(matter-29, not-31)
det(one-34, an-32)
amod(one-34, ideological-33)
dep(matter-29, one-34)

