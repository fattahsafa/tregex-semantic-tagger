(ROOT
  (S
    (PP (IN From)
      (NP (JJ federal) (NN water) (NNS shutoffs)))
    (, ,)
    (PP (IN in)
      (NP
        (NP (DT the) (NN name))
        (PP (IN of)
          (S
            (VP (VBG protecting)
              (NP
                (NP (DT a) (JJ tiny) (NN fish))
                (, ,)
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (VBP have)
                      (VP
                        (VP (VBN decimated)
                          (NP (NN agriculture)))
                        (CC and)
                        (VP (VBN left)
                          (NP
                            (QP (NNS tens) (IN of) (NNS thousands))
                            (NNS unemployed))
                          (, ,)
                          (PP (TO to)
                            (NP
                              (NP (JJ severe) (JJ local) (VBG zoning) (NNS restrictions))
                              (SBAR
                                (WHNP (WDT that))
                                (S
                                  (VP (VBP drive)
                                    (S
                                      (NP (NN home) (NNS prices))
                                      (ADJP (JJR higher)))))))))))))))))))
    (, ,)
    (NP (NNP California))
    (ADVP (RB now))
    (VP (VBZ has)
      (NP
        (NP (DT a) (JJ wide) (NN array))
        (PP (IN of)
          (NP
            (NP (NNS problems))
            (VP (VBG begging)
              (PP (IN for)
                (NP (NNS solutions))))))))
    (. .)))

amod(shutoffs-4, federal-2)
nn(shutoffs-4, water-3)
prep_from(has-39, shutoffs-4)
det(name-8, the-7)
prep_in(has-39, name-8)
prepc_of(name-8, protecting-10)
det(fish-13, a-11)
amod(fish-13, tiny-12)
dobj(protecting-10, fish-13)
nsubj(decimated-17, fish-13)
nsubj(left-20, fish-13)
aux(decimated-17, have-16)
rcmod(fish-13, decimated-17)
dobj(decimated-17, agriculture-18)
rcmod(fish-13, left-20)
conj_and(decimated-17, left-20)
dep(thousands-23, tens-21)
quantmod(thousands-23, of-22)
num(unemployed-24, thousands-23)
dobj(left-20, unemployed-24)
amod(restrictions-30, severe-27)
amod(restrictions-30, local-28)
amod(restrictions-30, zoning-29)
prep_to(left-20, restrictions-30)
nsubj(drive-32, restrictions-30)
rcmod(restrictions-30, drive-32)
nn(prices-34, home-33)
nsubj(higher-35, prices-34)
xcomp(drive-32, higher-35)
nsubj(has-39, California-37)
advmod(has-39, now-38)
root(ROOT-0, has-39)
det(array-42, a-40)
amod(array-42, wide-41)
dobj(has-39, array-42)
prep_of(array-42, problems-44)
partmod(problems-44, begging-45)
prep_for(begging-45, solutions-47)

(ROOT
  (S
    (NP (DT The) (NNP US))
    (, ,)
    (ADVP (RB moreover))
    (, ,)
    (VP (MD should)
      (ADVP (RB actively))
      (VP (VB seek)
        (NP (DT a) (NN path))
        (PRT (RP back))
        (PP (TO to)
          (NP (DT the) (CD Six) (NNP Party) (NNS Talks)))
        (, ,)
        (S
          (VP (VBG resisting)
            (NP (PDT both) (DT the) (JJ fatalistic) (NN idea))
            (SBAR (IN that)
              (S
                (NP (NNP North) (NNP Korea))
                (VP (MD can)
                  (ADVP (RB never))
                  (VP (VB be)
                    (VP (VBN persuaded)
                      (S
                        (VP (TO to)
                          (VP (VB roll)
                            (PRT (RP back))
                            (NP
                              (NP
                                (NP (PRP$ its) (JJ nuclear) (NN program))
                                (CC and)
                                (NP
                                  (NP (DT the) (JJ dangerous) (NN notion))
                                  (PP (IN of)
                                    (S
                                      (ADVP (RB simply))
                                      (VP (VBG waiting)
                                        (PP (IN for)
                                          (NP (DT the)
                                            (ADJP (JJ North) (JJ Korean))
                                            (NN regime)))
                                        (S
                                          (VP (TO to)
                                            (VP (VB come)
                                              (S
                                                (VP (VBG begging)))))))))))
                              (, ,)
                              (CONJP (IN if) (RB not))
                              (NP (NN collapse)))))))))))))))
    (. .)))

det(US-2, The-1)
nsubj(seek-8, US-2)
advmod(seek-8, moreover-4)
aux(seek-8, should-6)
advmod(seek-8, actively-7)
root(ROOT-0, seek-8)
det(path-10, a-9)
dobj(seek-8, path-10)
prt(seek-8, back-11)
det(Talks-16, the-13)
num(Talks-16, Six-14)
nn(Talks-16, Party-15)
prep_to(seek-8, Talks-16)
partmod(seek-8, resisting-18)
xcomp(seek-8, resisting-18)
predet(idea-22, both-19)
det(idea-22, the-20)
amod(idea-22, fatalistic-21)
dobj(resisting-18, idea-22)
complm(persuaded-29, that-23)
nn(Korea-25, North-24)
nsubjpass(persuaded-29, Korea-25)
aux(persuaded-29, can-26)
neg(persuaded-29, never-27)
auxpass(persuaded-29, be-28)
ccomp(resisting-18, persuaded-29)
aux(roll-31, to-30)
xcomp(persuaded-29, roll-31)
prt(roll-31, back-32)
poss(program-35, its-33)
amod(program-35, nuclear-34)
dobj(roll-31, program-35)
det(notion-39, the-37)
amod(notion-39, dangerous-38)
dobj(roll-31, notion-39)
conj_and(program-35, notion-39)
advmod(waiting-42, simply-41)
prepc_of(notion-39, waiting-42)
det(regime-47, the-44)
amod(Korean-46, North-45)
amod(regime-47, Korean-46)
prep_for(waiting-42, regime-47)
aux(come-49, to-48)
xcomp(waiting-42, come-49)
xcomp(come-49, begging-50)
dobj(roll-31, collapse-54)
conj_negcc(program-35, collapse-54)

(ROOT
  (S
    (NP (DT The) (NNP Dominicans)
      (CC and)
      (NNP Franciscans))
    (ADVP (RB literally))
    (VP (VBD lived)
      (PP (IN by)
        (S
          (VP (VBG begging) (: --)
            (S
              (NP (DT that))
              (VP (VBZ is))))))
      (, ,)
      (PP (IN by)
        (S
          (VP (VBG depending)
            (PP (IN on)
              (NP
                (NP (JJ diverse) (NNS sources))
                (PP (IN of)
                  (NP
                    (NP (NN income))
                    (, ,)
                    (SBAR
                      (WHNP
                        (WHNP (WP$ whose) (NN return))
                        (PP (TO to)
                          (NP (DT any) (JJ particular) (NN investor))))
                      (S
                        (VP (VBD was)
                          (ADVP (RB always))
                          (ADJP (JJ unclear)))))))))))))
    (. .)))

det(Dominicans-2, The-1)
nsubj(lived-6, Dominicans-2)
conj_and(Dominicans-2, Franciscans-4)
nsubj(lived-6, Franciscans-4)
advmod(lived-6, literally-5)
root(ROOT-0, lived-6)
prepc_by(lived-6, begging-8)
nsubj(is-11, that-10)
ccomp(begging-8, is-11)
parataxis(begging-8, is-11)
prepc_by(lived-6, depending-14)
amod(sources-17, diverse-16)
prep_on(depending-14, sources-17)
prep_of(sources-17, income-19)
poss(return-22, income-19)
nsubj(unclear-29, return-22)
det(investor-26, any-24)
amod(investor-26, particular-25)
prep_to(return-22, investor-26)
cop(unclear-29, was-27)
advmod(unclear-29, always-28)
rcmod(income-19, unclear-29)

(ROOT
  (S
    (NP (PRP We))
    (VP (VBD turned)
      (SBAR
        (S
          (NP (PRP$ our) (NN begging))
          (VP (VBZ bowls)
            (ADVP (RB upside) (RB down))
            (PP (IN as)
              (NP
                (NP (DT a) (NN gesture))
                (PP (IN of)
                  (NP (PRP$ our) (NNS feelings)))))))))
    (. .)))

nsubj(turned-2, We-1)
root(ROOT-0, turned-2)
poss(begging-4, our-3)
nsubj(bowls-5, begging-4)
ccomp(turned-2, bowls-5)
advmod(down-7, upside-6)
advmod(bowls-5, down-7)
det(gesture-10, a-9)
prep_as(bowls-5, gesture-10)
poss(feelings-13, our-12)
prep_of(gesture-10, feelings-13)

(ROOT
  (NP
    (NP (NNS People))
    (VP (VBG thrusting)
      (NP (PRP$ their) (NNS hands))
      (PP (IN through)
        (NP (DT the) (NN taxi) (NN window)))
      (, ,)
      (S
        (VP (VBG begging))))
    (. .)))

root(ROOT-0, People-1)
partmod(People-1, thrusting-2)
poss(hands-4, their-3)
dobj(thrusting-2, hands-4)
det(window-8, the-6)
nn(window-8, taxi-7)
prep_through(thrusting-2, window-8)
partmod(thrusting-2, begging-10)
xcomp(thrusting-2, begging-10)

(ROOT
  (S
    (NP
      (NP
        (NP (NNP Lukashenko) (POS 's))
        (JJ only) (NN alternative))
      (PP (TO to)
        (S
          (VP
            (VP (VBG losing)
              (NP (NN sovereignty))
              (PP (TO to)
                (NP (NNP Russia))))
            (, ,)
            (CC and)
            (VP
              (ADVP (RB thus))
              (VBG risking)
              (NP
                (NP (DT the) (NN wrath))
                (PP (IN of)
                  (NP (PRP$ his) (JJ nationalist) (NN base)))))))))
    (, ,)
    (VP (VBZ is)
      (S
        (VP (TO to)
          (VP (VB go)
            (S
              (VP (VBG begging)
                (PP (TO to)
                  (NP (DT the) (NNP IMF)))))))))
    (. .)))

poss(alternative-4, Lukashenko-1)
amod(alternative-4, only-3)
nsubj(is-21, alternative-4)
xsubj(go-23, alternative-4)
prepc_to(alternative-4, losing-6)
dobj(losing-6, sovereignty-7)
prep_to(losing-6, Russia-9)
advmod(risking-13, thus-12)
prepc_to(alternative-4, risking-13)
conj_and(losing-6, risking-13)
det(wrath-15, the-14)
dobj(risking-13, wrath-15)
poss(base-19, his-17)
amod(base-19, nationalist-18)
prep_of(wrath-15, base-19)
root(ROOT-0, is-21)
aux(go-23, to-22)
xcomp(is-21, go-23)
xcomp(go-23, begging-24)
det(IMF-27, the-26)
prep_to(begging-24, IMF-27)

(ROOT
  (S
    (S
      (SBAR (IN Whether)
        (S
          (VP
            (ADVP (RB deliberately))))
        (CC or)
        (RB not))
      (, ,)
      (NP (NNS regulators))
      (VP (VBP seem)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN missed)
                (NP (PRP$ their) (NN chance)
                  (S
                    (VP (TO to)
                      (VP (VB implement)
                        (NP (JJ serious) (NNS changes))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NNS rules))
                            (PP (IN of)
                              (NP (JJ global) (NN finance)))))))))))))))
    (, ,)
    (CC and)
    (S
      (NP (NNS governments))
      (VP (VBP are)
        (ADVP (RB now) (RB so))
        (VP (VBN weakened)
          (SBAR (IN that)
            (S
              (NP (PRP they))
              (VP (VBP are)
                (PP (IN at)
                  (NP
                    (NP (DT the) (NN mercy))
                    (PP (IN of)
                      (NP
                        (NP (DT those))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (PRN (, ,)
                              (ADVP (RB not) (RB long) (RB ago))
                              (, ,))
                            (VP (VBD were)
                              (VP (VBG begging)
                                (NP (PRP them))
                                (PP (IN for)
                                  (NP (NN help)))))))))))))))))
    (. .)))

complm(deliberately-2, Whether-1)
ccomp(seem-7, deliberately-2)
conj_or(deliberately-2, not-4)
ccomp(seem-7, not-4)
nsubj(seem-7, regulators-6)
xsubj(missed-10, regulators-6)
root(ROOT-0, seem-7)
aux(missed-10, to-8)
aux(missed-10, have-9)
xcomp(seem-7, missed-10)
poss(chance-12, their-11)
dobj(missed-10, chance-12)
aux(implement-14, to-13)
infmod(chance-12, implement-14)
amod(changes-16, serious-15)
dobj(implement-14, changes-16)
det(rules-19, the-18)
prep_to(implement-14, rules-19)
amod(finance-22, global-21)
prep_of(rules-19, finance-22)
nsubjpass(weakened-29, governments-25)
auxpass(weakened-29, are-26)
advmod(so-28, now-27)
advmod(weakened-29, so-28)
conj_and(seem-7, weakened-29)
complm(are-32, that-30)
nsubj(are-32, they-31)
ccomp(weakened-29, are-32)
det(mercy-35, the-34)
prep_at(are-32, mercy-35)
prep_of(mercy-35, those-37)
nsubj(begging-45, those-37)
dep(ago-42, not-40)
advmod(ago-42, long-41)
dep(begging-45, ago-42)
aux(begging-45, were-44)
rcmod(those-37, begging-45)
dobj(begging-45, them-46)
prep_for(begging-45, help-48)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
(ROOT
  (S
    (PP (IN Under)
      (NP (JJ certain) (NNS circumstances)))
    (, ,)
    (NP (NNS dogs))
    (VP (VBP understand)
      (SBAR (IN that)
        (S
          (NP
            (NP
              (NP (DT a) (NN human))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (MD can) (RB not)
                    (VP (VB see)
                      (NP (PRP them)))))))
            (PRN (-LRB- -LRB-)
              (SBAR (IN because)
                (S (, ,)
                  (PP (IN for)
                    (NP (NN example)))
                  (, ,)
                  (NP (PRP she))
                  (VP (VBZ is)
                    (ADVP (VBD blindfolded)))))
              (-RRB- -RRB-)))
          (VP (VBZ is)
            (ADJP (RBR less) (JJ likely)
              (S
                (VP (TO to)
                  (VP (VB respond)
                    (PP (TO to)
                      (S
                        (VP (VBG begging)
                          (PP (IN with)
                            (NP (DT a) (JJ tasty) (NN treat)))
                          (PP (IN than)
                            (NP
                              (NP (DT a) (NN person))
                              (SBAR
                                (WHNP (WP$ whose) (NNS vision))
                                (S
                                  (VP (VBZ is) (RB not)
                                    (ADJP (JJ obscured))))))))))))))))))
    (. .)))

amod(circumstances-3, certain-2)
prep_under(understand-6, circumstances-3)
nsubj(understand-6, dogs-5)
root(ROOT-0, understand-6)
complm(likely-27, that-7)
det(human-9, a-8)
nsubj(see-13, human-9)
nsubj(likely-27, human-9)
aux(see-13, can-11)
neg(see-13, not-12)
rcmod(human-9, see-13)
dobj(see-13, them-14)
mark(is-22, because-16)
prep_for(is-22, example-19)
nsubj(is-22, she-21)
dep(human-9, is-22)
advmod(is-22, blindfolded-23)
cop(likely-27, is-25)
advmod(likely-27, less-26)
ccomp(understand-6, likely-27)
aux(respond-29, to-28)
xcomp(likely-27, respond-29)
prepc_to(respond-29, begging-31)
det(treat-35, a-33)
amod(treat-35, tasty-34)
prep_with(begging-31, treat-35)
det(person-38, a-37)
prep_than(begging-31, person-38)
poss(vision-40, person-38)
nsubj(obscured-43, vision-40)
cop(obscured-43, is-41)
neg(obscured-43, not-42)
rcmod(person-38, obscured-43)

