(ROOT
  (S
    (NP (DT The) (NNS authorities))
    (ADVP (RB clearly))
    (VP (VBP wish)
      (S
        (VP (TO to)
          (VP (VB control)
            (NP
              (NP (DT the) (NN extent))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN thaw))
                  (PP (IN in)
                    (NP
                      (NP (NNP Syria) (POS 's))
                      (JJ political) (NN culture))))))))))
    (. .)))

det(authorities-2, The-1)
nsubj(wish-4, authorities-2)
xsubj(control-6, authorities-2)
advmod(wish-4, clearly-3)
root(ROOT-0, wish-4)
aux(control-6, to-5)
xcomp(wish-4, control-6)
det(extent-8, the-7)
dobj(control-6, extent-8)
det(thaw-11, the-10)
prep_of(extent-8, thaw-11)
poss(culture-16, Syria-13)
amod(culture-16, political-15)
prep_in(thaw-11, culture-16)

(ROOT
  (S
    (SBAR (IN Once)
      (FRAG
        (ADJP (JJ private))))
    (, ,)
    (NP (NNP Charleroi) (NN airport))
    (VP (MD could)
      (VP (VB sign)
        (NP
          (NP (DT any) (NN agreement))
          (SBAR
            (S
              (NP (PRP it))
              (VP (VBZ wishes)))))
        (, ,)
        (PP (IN with)
          (NP
            (NP (NNP Ryanair))
            (CC or)
            (NP (DT any) (JJ other) (NN airline))))))
    (. .)))

mark(private-2, Once-1)
advcl(sign-7, private-2)
nn(airport-5, Charleroi-4)
nsubj(sign-7, airport-5)
aux(sign-7, could-6)
root(ROOT-0, sign-7)
det(agreement-9, any-8)
dobj(sign-7, agreement-9)
dobj(wishes-11, agreement-9)
nsubj(wishes-11, it-10)
rcmod(agreement-9, wishes-11)
prep_with(sign-7, Ryanair-14)
det(airline-18, any-16)
amod(airline-18, other-17)
prep_with(sign-7, airline-18)
conj_or(Ryanair-14, airline-18)

(ROOT
  (S
    (NP (PRP It))
    (ADVP (RB then))
    (VP (VBD concluded)
      (SBAR (IN that)
        (S
          (NP
            (NP (NNP Tetra) (NNP Laval))
            (, ,)
            (PP (IN from)
              (NP
                (NP (PRP$ its) (JJ strong) (JJ dominant) (NN position))
                (PP (IN in)
                  (NP (DT the) (NN carton) (NN container) (NN market)))))
            (, ,))
          (VP (MD will)
            (ADVP (RB probably))
            (VP (VB pressure)
              (NP
                (NP (PRP$ its) (JJ current) (NNS customers))
                (VP (VBG wishing)
                  (S
                    (VP (TO to)
                      (VP (VB switch)
                        (PRT (RP over))
                        (S
                          (VP (TO to)
                            (VP (VB PET)
                              (NP (NN packaging))
                              (S
                                (VP (TO to)
                                  (VP (VB use)
                                    (NP
                                      (NP (NN equipment))
                                      (VP (VBN produced)
                                        (PP (IN by)
                                          (NP (NNP Sidel)))
                                        (SBAR
                                          (WHADVP (WRB when))
                                          (S
                                            (NP (PRP they))
                                            (VP (VBP make)
                                              (NP (DT that) (NN switch)))))))))))))))))))))))
    (. .)))

nsubj(concluded-3, It-1)
advmod(concluded-3, then-2)
root(ROOT-0, concluded-3)
complm(pressure-21, that-4)
nn(Laval-6, Tetra-5)
nsubj(pressure-21, Laval-6)
poss(position-12, its-9)
amod(position-12, strong-10)
amod(position-12, dominant-11)
prep_from(Laval-6, position-12)
det(market-17, the-14)
nn(market-17, carton-15)
nn(market-17, container-16)
prep_in(position-12, market-17)
aux(pressure-21, will-19)
advmod(pressure-21, probably-20)
ccomp(concluded-3, pressure-21)
poss(customers-24, its-22)
amod(customers-24, current-23)
dobj(pressure-21, customers-24)
xsubj(switch-27, customers-24)
partmod(customers-24, wishing-25)
aux(switch-27, to-26)
xcomp(wishing-25, switch-27)
prt(switch-27, over-28)
aux(PET-30, to-29)
xcomp(switch-27, PET-30)
dobj(PET-30, packaging-31)
aux(use-33, to-32)
xcomp(PET-30, use-33)
dobj(use-33, equipment-34)
partmod(equipment-34, produced-35)
agent(produced-35, Sidel-37)
advmod(make-40, when-38)
nsubj(make-40, they-39)
advcl(produced-35, make-40)
det(switch-42, that-41)
dobj(make-40, switch-42)

(ROOT
  (SBARQ
    (WHADVP (WRB Why))
    (SQ
      (VP (VBP do)
        (SBAR (IN so)
          (S
            (NP (JJ many) (NNP Holocaust) (NNS survivors))
            (VP (VBP sense)
              (NP (VBG emerging) (JJ anti-Jewish) (NNS threats))
              (PP (IN before)
                (S
                  (VP (VBG seeing)
                    (NP (PRP them))))))))))
    (. ?)))

advmod(do-2, Why-1)
root(ROOT-0, do-2)
mark(sense-7, so-3)
amod(survivors-6, many-4)
nn(survivors-6, Holocaust-5)
nsubj(sense-7, survivors-6)
advcl(do-2, sense-7)
amod(threats-10, emerging-8)
amod(threats-10, anti-Jewish-9)
dobj(sense-7, threats-10)
prepc_before(sense-7, seeing-12)
dobj(seeing-12, them-13)

(ROOT
  (S
    (S (CC But)
      (NP (NNP Ambassador) (NNP Bernard))
      (VP (VBD did)
        (VP (VB provide)
          (NP (DT a) (NN service)))))
    (: ;)
    (S
      (NP (PRP he))
      (VP (VBD helped)
        (S
          (NP (PRP us))
          (VP (TO to)
            (VP (VB recognize)
              (SBAR
                (WHADVP (WRB how)
                  (ADJP (JJ widespread)))
                (S
                  (NP (DT this) (JJ new) (NNS anti-Jewishness))
                  (VP (VBZ is)))))))))
    (. .)))

cc(provide-5, But-1)
nn(Bernard-3, Ambassador-2)
nsubj(provide-5, Bernard-3)
aux(provide-5, did-4)
root(ROOT-0, provide-5)
det(service-7, a-6)
dobj(provide-5, service-7)
nsubj(helped-10, he-9)
parataxis(provide-5, helped-10)
nsubj(recognize-13, us-11)
aux(recognize-13, to-12)
xcomp(helped-10, recognize-13)
advmod(is-19, how-14)
dep(how-14, widespread-15)
det(anti-Jewishness-18, this-16)
amod(anti-Jewishness-18, new-17)
nsubj(is-19, anti-Jewishness-18)
ccomp(recognize-13, is-19)

(ROOT
  (S
    (ADVP (RB Once))
    (NP (JJ Jewish) (NN religion))
    (VP (VBD was)
      (NP (DT the) (NN target)))
    (. .)))

advmod(target-6, Once-1)
amod(religion-3, Jewish-2)
nsubj(target-6, religion-3)
cop(target-6, was-4)
det(target-6, the-5)
root(ROOT-0, target-6)

(ROOT
  (S
    (ADVP (RB Sometimes))
    (NP (NNS anti-Zionists))
    (VP
      (VP (VBP claim)
        (SBAR (IN that)
          (S
            (NP (PRP they))
            (VP (VBP are) (RB not)
              (PP (IN against)
                (NP (NNPS Jews)))))))
      (CC but)
      (VP (VBP are)
        (ADJP (`` ``) (JJ only) ('' '')
          (PP (IN against)
            (NP (DT the) (JJ Jewish) (NN state))))))
    (. .)))

advmod(claim-3, Sometimes-1)
nsubj(claim-3, anti-Zionists-2)
nsubj(only-13, anti-Zionists-2)
root(ROOT-0, claim-3)
complm(are-6, that-4)
nsubj(are-6, they-5)
ccomp(claim-3, are-6)
neg(are-6, not-7)
prep_against(are-6, Jews-9)
cop(only-13, are-11)
conj_but(claim-3, only-13)
det(state-18, the-16)
amod(state-18, Jewish-17)
prep_against(only-13, state-18)

(ROOT
  (S
    (NP
      (NP (DT This) (NN demonization))
      (PP (IN of)
        (NP
          (NP (DT the) (JJ only) (NN democracy))
          (PP (IN in)
            (NP (DT the) (NNP Middle) (NNP East))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ central) (NN part))
        (PP (IN of)
          (NP (DT the) (JJ new) (NNS anti-Jewishness)))))
    (. .)))

det(demonization-2, This-1)
nsubj(part-14, demonization-2)
det(democracy-6, the-4)
amod(democracy-6, only-5)
prep_of(demonization-2, democracy-6)
det(East-10, the-8)
nn(East-10, Middle-9)
prep_in(democracy-6, East-10)
cop(part-14, is-11)
det(part-14, a-12)
amod(part-14, central-13)
root(ROOT-0, part-14)
det(anti-Jewishness-18, the-16)
amod(anti-Jewishness-18, new-17)
prep_of(part-14, anti-Jewishness-18)

(ROOT
  (S
    (NP
      (NP (DT This) (JJ constant) (NN singling))
      (PP (RB out) (IN of)
        (NP
          (NP (CD one) (NN nation))
          (PP (IN as)
            (NP
              (NP (NN humanity) (POS 's))
              (NN enemy))))))
    (VP (VBZ is)
      (PP (IN in)
        (NP
          (NP (NN fact))
          (SBAR
            (S
              (NP (DT a) (NN campaign))
              (VP (VBD directed)
                (PP (IN against)
                  (NP (DT the) (JJ Jewish) (NNS people)))))))))
    (. .)))

det(singling-3, This-1)
amod(singling-3, constant-2)
nsubj(is-12, singling-3)
num(nation-7, one-6)
prep_out_of(singling-3, nation-7)
poss(enemy-11, humanity-9)
prep_as(nation-7, enemy-11)
root(ROOT-0, is-12)
prep_in(is-12, fact-14)
dobj(directed-17, fact-14)
det(campaign-16, a-15)
nsubj(directed-17, campaign-16)
rcmod(fact-14, directed-17)
det(people-21, the-19)
amod(people-21, Jewish-20)
prep_against(directed-17, people-21)

(ROOT
  (S
    (ADVP (RB Indeed))
    (, ,)
    (NP
      (NP (JJ many) (JJ anti-Jewish) (NNS outbursts))
      (PP (IN in)
        (NP
          (NP (DT a) (NN number))
          (PP (IN of)
            (NP (NNS countries))))))
    (VP (VBP are)
      (VP (VBN rooted)
        (PP (IN in)
          (NP
            (NP (NNS condemnations))
            (PP (IN of)
              (NP (NNP Israel)))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VBP exploit)
                  (ADJP (JJ anti-Semitic))
                  (S
                    (ADJP (JJ terminology))))))))))
    (. .)))

advmod(rooted-12, Indeed-1)
amod(outbursts-5, many-3)
amod(outbursts-5, anti-Jewish-4)
nsubjpass(rooted-12, outbursts-5)
det(number-8, a-7)
prep_in(outbursts-5, number-8)
prep_of(number-8, countries-10)
auxpass(rooted-12, are-11)
root(ROOT-0, rooted-12)
prep_in(rooted-12, condemnations-14)
nsubj(exploit-18, condemnations-14)
prep_of(condemnations-14, Israel-16)
rcmod(condemnations-14, exploit-18)
acomp(exploit-18, anti-Semitic-19)
dep(exploit-18, terminology-20)

